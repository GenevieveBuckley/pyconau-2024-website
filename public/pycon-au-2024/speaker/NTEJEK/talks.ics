BEGIN:VCALENDAR
VERSION:2.0
PRODID:-//pretalx//pretalx.com//pycon-au-2024//NTEJEK
BEGIN:VTIMEZONE
TZID:AEST
BEGIN:STANDARD
DTSTART:20000326T040000
RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=3;UNTIL=20050326T170000Z
TZNAME:AEST
TZOFFSETFROM:+1100
TZOFFSETTO:+1000
END:STANDARD
BEGIN:STANDARD
DTSTART:20060402T040000
RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4;UNTIL=20060401T170000Z
TZNAME:AEST
TZOFFSETFROM:+1100
TZOFFSETTO:+1000
END:STANDARD
BEGIN:STANDARD
DTSTART:20070325T040000
RRULE:FREQ=YEARLY;BYDAY=4SU;BYMONTH=3;UNTIL=20070324T170000Z
TZNAME:AEST
TZOFFSETFROM:+1100
TZOFFSETTO:+1000
END:STANDARD
BEGIN:STANDARD
DTSTART:20080406T040000
RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4
TZNAME:AEST
TZOFFSETFROM:+1100
TZOFFSETTO:+1000
END:STANDARD
BEGIN:DAYLIGHT
DTSTART:20000827T030000
RRULE:FREQ=YEARLY;BYDAY=4SU;BYMONTH=8;UNTIL=20000826T170000Z
TZNAME:AEDT
TZOFFSETFROM:+1000
TZOFFSETTO:+1100
END:DAYLIGHT
BEGIN:DAYLIGHT
DTSTART:20011028T030000
RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10;UNTIL=20071027T170000Z
TZNAME:AEDT
TZOFFSETFROM:+1000
TZOFFSETTO:+1100
END:DAYLIGHT
BEGIN:DAYLIGHT
DTSTART:20081005T030000
RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=10
TZNAME:AEDT
TZOFFSETFROM:+1000
TZOFFSETTO:+1100
END:DAYLIGHT
END:VTIMEZONE
BEGIN:VEVENT
UID:pretalx-pycon-au-2024-79HGSW@pretalx.com
DTSTART;TZID=AEST:20241122T100000
DTEND;TZID=AEST:20241122T103000
DESCRIPTION:Sick of writing lots of dedicated methods to perform the same t
 asks? Want to write less code? This talk may be for you! \n\nREST API's ar
 e ubiquitious\, and a very useful way to send and recieve data from variou
 s services. However\, building them can often feel repetitive and boring. 
 So\, because I was lazy\, and sick of doing it I decided to override speci
 fic dunder methods to write less boiler plate code\, and keep myself inter
 ested.\n\nWas it easier? Probably not. Did it require less work than a nor
 mal implementation? Also probably not. Did it make my code more readable a
 nd portable? Definitely not. But it was fun\, and I learnt how overriding 
 Python's magic methods - often called dunders - could be useful. Let me sh
 are the lessons I learnt with you and inspire your own ideas.
DTSTAMP:20240903T102355Z
LOCATION:Goldfields Theatre
SUMMARY:A Lazy Person's Guide to Building REST Clients or: How I Learned to
  Stop Worrying and Love Dunder Overrides - Ash Bek
URL:https://pretalx.com/pycon-au-2024/talk/79HGSW/
END:VEVENT
END:VCALENDAR
