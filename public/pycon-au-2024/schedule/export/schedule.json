{"$schema": "https://c3voc.de/schedule/schema.json", "generator": {"name": "pretalx", "version": "2024.3.0.dev0"}, "schedule": {"url": "https://pretalx.com/pycon-au-2024/schedule/", "version": "20240903.1", "base_url": "https://pretalx.com", "conference": {"acronym": "pycon-au-2024", "title": "PyCon AU 2024", "start": "2024-11-22", "end": "2024-11-24", "daysCount": 3, "timeslot_duration": "00:05", "time_zone_name": "Australia/Melbourne", "colors": {"primary": "#00B159"}, "rooms": [{"name": "Goldfields Theatre", "guid": "ca871299-987f-53fa-80e8-60519b36cb31", "description": null, "capacity": null}, {"name": "Eureka 2", "guid": "555051c2-6250-55cf-9197-948bf9bfff84", "description": null, "capacity": null}, {"name": "Eureka 3", "guid": "b9261db4-c925-5322-b218-e87a4c5e32a3", "description": null, "capacity": null}], "tracks": [{"name": "Main Conference", "color": "#FC0101"}, {"name": "Main Conference (waitlist)", "color": "#FF6969"}, {"name": "Education", "color": "#FFBF00"}, {"name": "Education (waitlist)", "color": "#FFE491"}, {"name": "DevOops", "color": "#00BA1E"}, {"name": "DevOops (waitlist)", "color": "#60D773"}, {"name": "Scientific Python", "color": "#0078A4"}, {"name": "Scientific Python (waitlist)", "color": "#4EACCF"}], "days": [{"index": 1, "date": "2024-11-22", "day_start": "2024-11-22T04:00:00+11:00", "day_end": "2024-11-23T03:59:00+11:00", "rooms": {"Goldfields Theatre": [{"url": "https://pretalx.com/pycon-au-2024/talk/ZCKWM3/", "id": 53984, "guid": "ed823c0f-8cec-5340-8a77-ece07f476685", "date": "2024-11-22T09:20:00+11:00", "start": "09:20", "logo": null, "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-53984-why-uuids-are-secretly-incredibly-fascinating", "title": "Why UUIDs are Secretly Incredibly Fascinating", "subtitle": "", "track": "DevOops", "type": "Talk", "language": "en", "abstract": "What even is '06462f89-b4ef-7f7d-8000-edda1bba5155' and why should you actually care?\r\n\r\n(you should, but \"why\"?)", "description": "UUIDs are used all over the place, but there are a ton of variants. They're theoretically absolutely unique, and yet dozens of companies and projects abandoned the standard to invent their own identifier schemas instead.\r\n\r\nWhy is that? and why does someone think they're interesting enough to talk about at a conference?\r\n\r\nLet's go down this rabbit whole together, today you'll learn:\r\n\r\n- why there were five versions of UUIDs in the original spec\r\n- which versions are still useful today, and when you should consider using them\r\n- why, even so, they weren't considered fit-for-purpose for many situations\r\n- what's being done to fix that\r\n- ~~what's the difference between UUID and GUID?~~\r\n\r\nI'll bet you'll find the answers more interesting than you expected to!", "recording_license": "", "do_not_record": false, "persons": [{"guid": "9464d2dc-1a9c-5422-b900-40fff29af3fa", "id": 1352, "code": "KCADCR", "public_name": "Tom Eastman", "avatar": "https://pretalx.com/media/avatars/52298146141_97cb5031f9_k_Kyf5T1H.jpg", "biography": "In 2001 Tom handed in a programming assignment for a university class that came out to about two thousand lines of Java. His professor later shared their model answer to the problem, it was thirty lines of Python. Tom switched sides on the spot.\r\n\r\nTom is a senior software engineer for Kraken Technologies, and is the president of Python New Zealand, the charity promoting and supporting the Python language community in New Zealand.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/79HGSW/", "id": 53557, "guid": "79bfdbda-f2a1-5242-900b-f1652ee8a592", "date": "2024-11-22T10:00:00+11:00", "start": "10:00", "logo": null, "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-53557-a-lazy-person-s-guide-to-building-rest-clients-or-how-i-learned-to-stop-worrying-and-love-dunder-overrides", "title": "A Lazy Person's Guide to Building REST Clients or: How I Learned to Stop Worrying and Love Dunder Overrides", "subtitle": "", "track": "DevOops", "type": "Talk", "language": "en", "abstract": "Sick of writing lots of dedicated methods to perform the same tasks? Want to write less code? This talk may be for you! \r\n\r\nREST API's are ubiquitious, and a very useful way to send and recieve data from various services. However, building them can often feel repetitive and boring. So, because I was lazy, and sick of doing it I decided to override specific dunder methods to write less boiler plate code, and keep myself interested.\r\n\r\nWas it easier? Probably not. Did it require less work than a normal implementation? Also probably not. Did it make my code more readable and portable? Definitely not. But it was fun, and I learnt how overriding Python's magic methods - often called dunders - could be useful. Let me share the lessons I learnt with you and inspire your own ideas.", "description": "Early in my Python learning journey I was having to rapidly prototype and implement REST clients for grabbing information. Bored of writing what felt like the same code over and over again, I wanted a more interesting way of solving the problem.\r\n\r\nCurious about pythons error handling, and knowing little about magic methods beyond `__init__()`, I stumbled across ways to manipulate attribute access and creation. Spending far to much time diving deeper, I learned how to query REST endpoints without having to define a dedicated method for each call.\r\n\r\nLuckily, we can all learn from my abilility to overcomplicate even the simplest tasks. Aimed at users who want to explore class customisation, those who want to add some new problem solving tools to their belt, or anyone wanting to hear how overcomplicating problems can be one of the best learning tools. \r\n\r\nWe will touch on:\r\n- What are magic methods, and how you can start using them.\r\n- Why reading the Python reference documentation is useful.\r\n- How to deal with undefined class attributes.\r\n- Creating and implementing callable objects.\r\n\r\nWhile the story and example focus on building a REST client, the concepts presented can be applied to many problems.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "d16022b2-ced0-5b6c-8985-021e6cc50ed6", "id": 47097, "code": "NTEJEK", "public_name": "Ash Bek", "avatar": "https://pretalx.com/media/avatars/2589332414bf1618600e2bcafa1307f3f50ecfdc_YbHvJd4.webp", "biography": "Ash is a cyber security engineer with a background in medical device testing. Chronically incapable of saying no to interesting projects or weird technical problems, they are also allergic to writing scripts more than ~300 lines long. Involved in a number of pride networks, they're passionate about expanding queer representation in cyber security and engineering. \r\n\r\nThey still haven't figured out what DevSecOps is, and at this point are too afraid to ask.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/NLZQAA/", "id": 53302, "guid": "09a269bb-34b1-57e5-8c20-340838c64767", "date": "2024-11-22T11:00:00+11:00", "start": "11:00", "logo": null, "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-53302-django-on-aws-for-chump-change", "title": "Django on AWS for chump change", "subtitle": "", "track": "DevOops", "type": "Talk", "language": "en", "abstract": "Some cheap and definitely not employer approved ways to run Django on AWS infrastructure on a budget", "description": "With the power of AWS and the Cloud Development Framework (CDK) we can spin up cheap infrastructure to host Django on. By leveraging cheap and free tier AWS services while also creating some very questionable resources and code we can scale a Django application down to a user base of 2 or less!", "recording_license": "", "do_not_record": false, "persons": [{"guid": "2ed46f52-85bb-51e8-b98f-2c8485c3974b", "id": 46958, "code": "JFJVXW", "public_name": "Luke Wiwatowski", "avatar": "https://pretalx.com/media/avatars/b76ad1749a253bb98395d9a566c99ad6_Y2eAHoO.jpg", "biography": "Luke is a senior software engineer at WSP. He's worked in the industry for 7 years and has spent more time than we would like to admit debugging Django and Python code. Luke also a long time ago was an Australian representative gymnast, competing at the Commonwealth Games and World Championships.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/DQGVLY/", "id": 52919, "guid": "fd5d3627-4ee3-5552-aeb3-4555d7c1d2d9", "date": "2024-11-22T11:40:00+11:00", "start": "11:40", "logo": null, "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-52919-simplifying-python-web-app-operations-automating-k8s-ops-with-open-source", "title": "Simplifying Python Web App Operations: Automating K8s Ops with Open Source", "subtitle": "", "track": "DevOops", "type": "Talk", "language": "en", "abstract": "After creating a great web app using Python such as with flask, the next hurdle to production is how to make it available to users and operate it. And not just your app, but also ingress, the database, observability and the list goes on. We will go through your options for simplifying the operations of your web app using open source tooling. This will include using k8s directly, helm charts, IaaC using pulumi and new tooling developed by Canonical using juju. By the end of the talk you will have seen the benefits and drawbacks of each which will help you make an informed decision on which tool best suits your needs!", "description": "", "recording_license": "", "do_not_record": false, "persons": [{"guid": "36a35dcb-a26d-559d-9c65-d01da61d44c6", "id": 44949, "code": "ATDLZU", "public_name": "David Andersson", "avatar": "https://pretalx.com/media/avatars/1615684432676_U5XDwSy.jpeg", "biography": "I graduated with an engineering degree and joined the largest telco in Australia as a software developer. After a few years, I switched to product where I eventually ended up leading the creation of products for developers. This led me back into engineering where I took on an organisation tackling cloud products.\r\n\r\nAn opportunity came up to join Canonical where I have been for the last 2 years working on products to simplify operations of open source products.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/M3KJ3V/", "id": 53974, "guid": "938b148f-4cee-5089-b664-2f4dfa2fdd7a", "date": "2024-11-22T12:20:00+11:00", "start": "12:20", "logo": null, "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-53974-notes-on-over-engineering-a-project-post-mortem", "title": "Notes on Over-Engineering: A Project Post-Mortem", "subtitle": "", "track": "DevOops", "type": "Talk", "language": "en", "abstract": "Join me for a retrospective on a reusable Django app for providing shared database multi-tenancy, complete with automatic tenant-specific queryset filtering, automatic tenant selection middleware, REST framework support, and comprehensive test coverage. This app, despite its sophistication, was never used in production. Let's explore why it was ultimately deemed over-engineered and unnecessary, and what lessons we can learn from this experience.", "description": "I have a story to share about the pitfalls of over-engineering\u2014a project that resulted in a powerful yet unused Django library for shared database multi-tenancy. This library included automatic tenant-specific querysets, tenant selection middleware, REST framework support, and full test coverage across multiple Python and Django versions. Despite all of its advanced features and the confidence of complete test coverage, it was abandoned before deployment. In this talk, I\u2019ll discuss the journey of this project, from its ambitious beginnings to its eventual demise, highlighting key lessons learned about scope creep, planning pitfalls, and some of the harsh realities of software development.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "4d1bc505-a29e-58d4-bcf0-3112cf09d106", "id": 1685, "code": "RSUKRU", "public_name": "Sam Bishop", "avatar": "https://pretalx.com/media/avatars/avatar-sp1_PGtPyGB.jpg", "biography": "Professional software developer, Amateur rocket scientist and astronomer. Loves Python, Django, cats, working on their personal software and hardware projects, everything space, playing games of all kinds, and tinkering with 3D Printers.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/NUUJAN/", "id": 53674, "guid": "1c0274f5-9537-5687-bd81-4227fa4a9b32", "date": "2024-11-22T13:50:00+11:00", "start": "13:50", "logo": null, "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-53674-who-tests-the-testers-making-and-testing-pipelines", "title": "Who tests the testers? Making and testing pipelines", "subtitle": "", "track": "DevOops", "type": "Talk", "language": "en", "abstract": "You likely have a good pipeline that either runs tests, lints, or deployments for your project.\r\n\r\nBut when it comes to changing that pipeline, how sure are you that it works before taking those changes live?", "description": "In this talk, we'll explore why it doesn't have to be the case that \"there's no devops for devops\".\r\n\r\nWe'll give a quick run down of what pipelines are, and why they should be used, before we give an example where it can be hard to know whether making changes to a gitlab pipeline will fail, and why that can be the case.\r\n\r\nThen, we'll showcase tools that can be used for testing, creating, and simulating pipelines, so you too can setup a system to always be sure that your pipeline changes won't cause any water damage.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "eb0a3da1-07b0-5872-8ef0-9efcdd06a059", "id": 1609, "code": "AHET73", "public_name": "Evan Kohilas", "avatar": "https://pretalx.com/media/avatars/ebd48c4b1d85878d6035ad6ac3631070_90Vo0dw.jpg", "biography": "Evan is a Senior Software Engineer whose passions lie in improving the developer experience by enhancing code health, optimising workflows, and working towards nohumanerrors.com\r\n\r\nWhen he's not thinking about security, informatics, or giving talks about his many projects, you'll find him nomming on Subway cookies, or chasing bunny rabbits.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/XHM7N7/", "id": 52777, "guid": "f01e7586-1ada-56f3-80b8-43bcd5710d4d", "date": "2024-11-22T14:30:00+11:00", "start": "14:30", "logo": null, "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-52777-coding-competition-software-vs-murphy-s-law", "title": "Coding Competition Software VS Murphy's Law", "subtitle": "", "track": "DevOops", "type": "Talk", "language": "en", "abstract": "Imagine agreeing to develop a full stack web app to host a coding competition for thousands of students. Then standing at a podium in front of a large crowd as your app crashes and you discover that you might be in too deep.\r\n\r\nThat was my first year of a four year journey of learning to program \"properly\" and build something robust and useful. The full story includes more spectacular fails, hacking and an eventually an app students loved using to program algorithms that do battle in contests based on game theory. The app is built on React / FastAPI and SQLmodel ORM", "description": "Talk sections:\r\n\r\n1. Introduction to myself and the Victorian Coding Challenge (5 min)\r\n2. Journey through 4 platform iterations from Replit and Google sites to AWS / React and FastAPI (10 min)\r\n3. Stories about hacks, crashes and making a contest that is at least somewhat immune to chatGPT plagiarism. (10 min)\r\n4. Lessons learned and advice on getting things right with testing and data validation. (5 min)", "recording_license": "", "do_not_record": false, "persons": [{"guid": "da3defe2-d1ce-5da7-baac-fdf89b308c90", "id": 46551, "code": "VJPZ7L", "public_name": "Sanjin", "avatar": null, "biography": null, "answers": []}], "links": [], "attachments": [], "answers": []}], "Eureka 2": [{"url": "https://pretalx.com/pycon-au-2024/talk/ACKK3A/", "id": 54019, "guid": "f5cf1a85-acd5-5fca-975c-03a1f65e7c63", "date": "2024-11-22T09:20:00+11:00", "start": "09:20", "logo": "https://pretalx.com/media/pycon-au-2024/submissions/ACKK3A/causal_cat_meme_jty9Bvb.jpg", "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-54019-causal-discovery-in-python", "title": "Causal Discovery in Python", "subtitle": "", "track": "Scientific Python", "type": "Talk", "language": "en", "abstract": "A review and comparison of software available for causal discovery in Python. Causal discovery means learning \"what causes what\" from your data. The input is a tabular dataset; the output is a causal graphical model (or a set of potential models) over your features. If feature A affects feature B, there should be an arrow A-->B in the causal graphical model. Causal discovery is useful for hypothesis generation, experiment selection, and for testing our assumptions around causation.\r\n\r\nI'll give a brief intro to causal discovery, then review the following packages: py-tetrad, causal-learn, tigramite, causalnex, and cdt (causal discovery toolbox). The packages have some overlap but different emphases: each one implements at least one algorithm not covered by the other packages, making them useful in different situations. If time permits I'll finish with a quick demo, showing each package learning a model from the same dataset.", "description": "", "recording_license": "", "do_not_record": false, "persons": [{"guid": "a3f344ea-9133-5fb5-bdd0-aa0e9121317c", "id": 47339, "code": "Q7H3M8", "public_name": "Lizzie Silver", "avatar": "https://pretalx.com/media/avatars/Silver_Lizzie_4eAibq1.jpg", "biography": "Lizzie Silver is a Senior Data Scientist at WSP. She has broad interests in applied data science, and has worked on projects in electricity distribution, water distribution, abandoned mine shaft detection, fish ecology, and arthritis monitoring via wearable devices, among others. She did her PhD in causal discovery at Carnegie Mellon University. Her pastimes include singing in choirs, and running the monthly Melbourne Machine Learning and AI Meetup, and the Melbourne chapter of Puzzled Pint.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/WB8HTT/", "id": 53925, "guid": "07871c72-c0d8-5796-a363-67e457f6f301", "date": "2024-11-22T10:00:00+11:00", "start": "10:00", "logo": null, "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-53925-verifying-and-evaluating-scientific-results-with-the-open-source-package-scores-", "title": "Verifying and evaluating scientific results with the open source package \"scores\"", "subtitle": "", "track": "Scientific Python", "type": "Talk", "language": "en", "abstract": "Verifying, evaluating or interpreting complex data requires specialist tools and methods. Many data scientists, programmers and scientists will be familiar with some evaluation metrics such as accuracy, mean squared error or true positive rate. There are many situations where these scores are insufficient for assessing correctness, accuracy or suitability of a model or prediction. The challenge of verifying models and predictions affects most fields of science, engineering, and many machine learning applications.\r\n\r\nThis talk will introduce \"scores\", an open source Python package for verifying and evaluating labelled, n-dimensional (multidimensional) data at any scale. \"scores\" includes over 50 metrics, statistical techniques and data processing tools. The software repository can be found at https://github.com/nci/scores and the documentation can be found at https://scores.readthedocs.io/ .\r\n\r\nThis talk is suitable for beginner, intermediate and expert audiences. Developers and data scientists who are familiar mainly with tabular data, such as supported by the pandas library, may be interested in the additional functionality offered by \"scores\" (and the xarray library it utilises). For those learning about more advanced methods, every metric and statistical test has a companion Jupyter Notebook tutorial. For expert users already familiar with these ideas, you may be interested in some of the novel scoring methods not commonly found in other packages. \r\n\r\nCome to this talk to hear about:\r\n - The difference between tabular data, n-dimensional data, and labelled n-dimensional data\r\n - Examples of using a common metric from \"scores\" on labelled, n-dimensional data\r\n - Examples of using \"scores\" for interrogating data in multiple dimensions\r\n - Examples of where basic methods overlook important considerations\r\n - Examples of using some of the more complex metrics in \"scores\"", "description": "This talk will introduce \"scores\", an open source Python package for verifying and evaluating labelled, n-dimensional (multidimensional) data at any scale. \"scores\" includes over 50 metrics, statistical techniques and data processing tools.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "cb3994f8-4040-5a3d-923b-48a03fc22099", "id": 1356, "code": "ZZQ9TE", "public_name": "Tennessee Leeuwenburg", "avatar": "https://pretalx.com/media/avatars/Profile_Photo_Tennessee_Leeuwenburg_JwewX1k.jpg", "biography": "Tennessee Leeuwenburg is a data scientist and software developer with over 20 years of experience. He has an interest in open source software, machine learning, and forecast verification. His current research work includes the development of scientific machine learning models for weather and environmental prediction. For an overview of his recent publications, please visit https://orcid.org/0009-0008-2024-1967 .", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/MQQJYE/", "id": 53956, "guid": "1dafa31d-b173-5aae-9d44-6c4d6f60c2e2", "date": "2024-11-22T11:00:00+11:00", "start": "11:00", "logo": "https://pretalx.com/media/pycon-au-2024/submissions/MQQJYE/Commissioning_Tools_alRjbpn.png", "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-53956-commissioning-tools-at-the-australian-synchrotron-or-how-to-get-a-bazillion-dollars-worth-of-toys-to-play-nicely-together", "title": "Commissioning tools at the Australian Synchrotron, or, how to get a bazillion dollars worth of toys to play nicely together", "subtitle": "", "track": "Scientific Python", "type": "Talk", "language": "en", "abstract": "Discover the innovative work happening at the Australian Synchrotron, where high-energy X-rays support research across Australia and neighbouring countries. The scientific computing team uses Python to connect to hardware, orchestrate experiments, and process data.\r\n\r\nWe'll focus on a Python Dash interface developed to commission new positioners and detectors. This interface automatically generates Gaussian statistics. It includes pages for both one positioner and one detector (1D) or two positioners and one detector (2D), and allows users to click on a 2D Gaussian to take horizontal and vertical slices.\r\n\r\nAdditionally, we will discuss best programming practices, such as implementing unit tests, maintaining DRY principles, and using linting tools to improve code quality. Good programming practices work beautifully in a scientific environment.  Join us to learn how these techniques can enhance your work with Python.", "description": "", "recording_license": "", "do_not_record": false, "persons": [{"guid": "97129661-46ab-5f0b-aa9b-5f340dfd812f", "id": 47254, "code": "JJR3W8", "public_name": "Mel", "avatar": null, "biography": "Dr Mel Makin is a senior scientific software engineer from the Australian Synchrotron.  She completed her PhD in quantum physics at the University of Melbourne in 2011.  Since that time, she has worked on many software projects.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/9MLDVZ/", "id": 53359, "guid": "e07daa90-f713-5046-b598-b09c2be5aeb5", "date": "2024-11-22T11:40:00+11:00", "start": "11:40", "logo": null, "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-53359-astronomy-with-python-for-non-astronomers", "title": "Astronomy with Python, for non-astronomers", "subtitle": "", "track": "Scientific Python", "type": "Talk", "language": "en", "abstract": "Astronomers have been dealing with digital data since the 1980s and online databases \r\nsince the early 90's, and now, almost all research astronomers use Python to access and \r\nprocess that data. Most astronomical database are open to the public, and most research\r\nsoftware tools are either open source, or freely available.  I'll give an intro, aimed at \r\nnon-astronomers, to some Python packages (astropy, skyfield) and online research tools.\r\n\r\nThis talk will give an overview on what tools and databases are available and how to access \r\nthem. Maybe you're writing a game, and you want the 3D locations and properties of the \r\nnearest 10,000 stars (or extrasolar planets, or galaxies). Maybe you're building a Solar\r\npanel that tracks the Sun, or a camera mount that tracks the International Space\r\nStation. Maybe you're trying to model shadow lengths and directions in satellite images. Or\r\nmaybe you just want to play around with real telescope images that haven't had a PR \r\ndepartment make them 'prettier'...", "description": "", "recording_license": "", "do_not_record": false, "persons": [{"guid": "15402b91-c730-5916-b713-0eee7bc3d254", "id": 1273, "code": "9JGCPM", "public_name": "Andrew Williams", "avatar": "https://pretalx.com/media/avatars/JC_9591-head.png", "biography": "I\u2019m an optical astronomer who moved from research into software for telescope and instrumentation automation, and I've been working on the Murchison Widefield Array (a large radio telescope in the Murchison region of Western Australia) and related instrumentation since 2007. I work for Curtin University, in Perth, Australia.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/JV9WT7/", "id": 53803, "guid": "a0997343-8ba1-55c9-a008-05333a4a3163", "date": "2024-11-22T12:20:00+11:00", "start": "12:20", "logo": "https://pretalx.com/media/pycon-au-2024/submissions/JV9WT7/napari-window_5oz2dQ9_2KmM2rG.png", "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-53803-explore-annotate-and-analyse-multidimensional-image-data-with-napari", "title": "Explore, annotate, and analyse multidimensional image data with napari", "subtitle": "", "track": "Scientific Python", "type": "Talk", "language": "en", "abstract": "napari is an n-dimensional image viewer for Python. If you\u2019ve ever tried `plt.imshow(arr)` and made Matplotlib unhappy because `arr` has more than two dimensions, then napari might be for you! napari will gladly display higher-dimensional arrays by providing sliders to explore additional dimensions. But napari can also: overlay derived data, such as points, segmentations, polygons, surfaces, and more; and annotate and edit these data, using standard data structures like NumPy or Zarr arrays, allowing you to seamlessly weave exploration, computation, and annotation in image analysis.", "description": "napari is an n-dimensional image viewer for Python. If you\u2019ve ever tried `plt.imshow(arr)` and made Matplotlib unhappy because `arr` has more than two dimensions, then napari might be for you!\r\n\r\nThe napari canvas can be 2D or 3D. When you give napari an array with more dimensions than the canvas, it will automatically create sliders for those additional dimensions, allowing you to rapidly explore your full data, rather than a few sampled slices.\r\n\r\nImage analysis and visualisation involves more than images though: feature detection algorithms result in points, segmentation results in label images, annotation results in shapes such as rectangles or polygons, and more. Napari provides layers that can be displayed on top of each other or side by side, allowing users of Scientific Python to gain a rapid understanding of the algorithms they\u2019re using \u2014 where they work well and where they might go wrong.\r\n\r\nSometimes, image analysis algorithms get you this far, but not quite far enough. In such cases, it\u2019s useful to manually curate their output, then continue with downstream steps of an analysis. Napari provides editing tools for its layer types, allowing one for example to add missing points to the output of a peak detection algorithm, remove incorrect ones, paint over incorrect parts of a segmentation, or draw polygons around missed objects of interest. The resulting data points are saved in standard Scientific Python data structures, such as NumPy or Zarr arrays.\r\n\r\nThis design makes it easy to seamlessly weave together image exploration, image computation, processing, and analysis, and data annotation, curation, and editing.\r\n\r\nNapari provides a plugin interface, allowing developers to extend napari\u2019s capabilities, providing users with novel ways to interact with their data. Because napari provides both a library accessible within Python, IPython, and Jupyter, and a standalone executable script, we have found that napari plugins can help collaborators run Python image analysis workflows without needing to launch Python.\r\n\r\nIn this talk, we'll introduce napari\u2019s history, (live) demonstrate the features described above, and discuss current limitations and where we\u2019re going.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "5c112000-214d-572c-9f6c-588228149f56", "id": 47257, "code": "8NFJSF", "public_name": "Juan Nunez-Iglesias", "avatar": "https://pretalx.com/media/avatars/425e61a8c6b77bd5d300cd1991ec3f15_n565tME.jpg", "biography": "I'm a research scientist helping other scientists get insights from their image data using Python. I've been using Python since 2008, and the main scientific Python ecosystem (NumPy, SciPy, & co) since 2010. In 2012, on a whim, I went to my first SciPy (US) conference, and it changed my life! I realised that \"open source\" didn't mean just posting the code online. It meant actively collaborating on code with other scientists, across vast distances and at different times. Before you could say \"import numpy as np\", I had joined the scikit-image team, written a paper about it, written a whole book on SciPy (!), spoken at various SciPys and PyConAUs, started new collaborative, open source libraries, and just generally been all-in on Scientific Python. I love this community and what it has done for me, and always try to pay it forward for new folks in our community! \ud83d\ude0a", "answers": []}, {"guid": "e5c7029a-bca8-5920-a44b-6a74b041cd66", "id": 47349, "code": "S7AU83", "public_name": "Draga Doncila Pop", "avatar": null, "biography": null, "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/7DJWKZ/", "id": 53938, "guid": "5ce1b123-01c8-5e47-8f83-8fb45bf303cd", "date": "2024-11-22T13:50:00+11:00", "start": "13:50", "logo": null, "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-53938-from-keyword-chaos-to-clarity-conquering-a-complex-systematic-review-with-python", "title": "From Keyword Chaos to Clarity: Conquering a Complex Systematic Review with Python", "subtitle": "", "track": "Scientific Python", "type": "Talk", "language": "en", "abstract": "How can you find relevant needles in a haystack of 25,000 academic abstracts when keyword searching is useless? I explore how I used Python to automate my way out of systematic review hell.", "description": "Systematic reviews are the highest form of scientific evidence \u2013 the ultimate summary of all existing studies. I started my PhD thinking that finding the right papers to read was just matter of using the right keywords. But then I ended up with over 25,000 research papers \u2013 way too many to read or filter with traditional methods. Impossible, right?\r\n\r\nFortunately, I know Python! Come with me on a journey through the challenges of sifting through mountains of research. I dive into how I used Python to automate finding relevant papers for my systematic review, wrestling with PubMed\u2019s quirky download format, using regular expressions to find all the creative ways people refer to childbirth in the literature, and using LLMs to extract information from the abstracts. I\u2019ll also explain why \u201cNOT \u2018dog\u2019\u201d didn\u2019t work for me.\r\n\r\nThis talk is for anyone who\u2019s ever felt lost in a sea of academic papers, or just wants to hear a story of how Python became my secret weapon in the systematic review process.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "9338778b-1ad8-5e2b-9481-a4438afb1733", "id": 47331, "code": "JTPU7J", "public_name": "Edwina Mead", "avatar": "https://pretalx.com/media/avatars/Untitled_M6iVsMc.png", "biography": "Edwina Mead BEng (Hons), MPH, MGH\r\nPhD student, UTS\r\nResearch Assistant, UNSW\r\n\r\nEdwina is a PhD student in Public Health at the University of Technology Sydney, where she is combining her software engineering background with cutting-edge health research. She is harnessing Python's powerful data processing capabilities to automate a complex systematic review, synthesising vast amounts of medical literature to create a more holistic understanding of the far-reaching impacts of current maternity practices on women, children, health systems, and even the environment.\r\n\r\nIn her role as a research assistant at UNSW, Edwina applies Python to rapidly analyse administrative data on ambulance attendances for drowning in NSW. This work has expanded our understanding of the drowning burden in the state, showcasing Python's versatility in public health research.\r\n\r\nEdwina's innovative approaches demonstrate how Python can accelerate and enhance research in public health, from streamlining data analysis to increasing the scope and depth of evidence synthesis.\r\n\r\nWhen she's not immersed in code or health data, Edwina can be found wrangling her two young children and playfully introducing them to computational thinking concepts - perhaps nurturing the next generation of Python enthusiasts!", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/3JHULA/", "id": 53016, "guid": "d658d009-139d-5b52-9c0e-e5bdbf80ac08", "date": "2024-11-22T14:30:00+11:00", "start": "14:30", "logo": "https://pretalx.com/media/pycon-au-2024/submissions/3JHULA/panda_to_star_b5l5pAI.gif", "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-53016-data-morph-a-cautionary-tale-of-summary-statistics", "title": "Data Morph: A Cautionary Tale of Summary Statistics", "subtitle": "", "track": "Scientific Python", "type": "Talk", "language": "en", "abstract": "Statistics do not come intuitively to humans; they always try to find simple ways to describe complex things. Given a complex dataset, they may feel tempted to use simple summary statistics like the mean, median, or standard deviation to describe it. However, these numbers are not a replacement for visualizing the distribution.\r\n\r\nTo illustrate this fact, researchers have generated many datasets that are very different visually, but share the same summary statistics. In this talk, I will discuss *Data Morph*, an open source package that builds on previous research using simulated annealing to perturb an arbitrary input dataset into a variety of shapes, while preserving the mean, standard deviation, and correlation to multiple decimal points. I will showcase how it works, discuss the challenges faced during development, and explore the limitations of this approach.", "description": "This talk introduces *Data Morph*, a new open source Python package I built that can be used to morph an input dataset of 2D points into select shapes, while preserving the summary statistics to a given number of decimal points through simulated annealing. *Data Morph* extends research from Autodesk to create the [Datasaurus Dozen](https://damassets.autodesk.net/content/dam/autodesk/research/publications-assets/pdf/same-stats-different-graphs.pdf), and is intended to be used as a teaching tool for illustrating why you can\u2019t rely solely on summary statistics. Come learn how it works and what it took to translate the research into an open-source library.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "a8a67b83-2096-5586-949a-be3485dfad1e", "id": 15572, "code": "9WJJPL", "public_name": "Stefanie Molin", "avatar": "https://pretalx.com/media/avatars/li_7EgJHSM.jpeg", "biography": "[Stefanie Molin](https://stefaniemolin.com) is a software engineer at Bloomberg in New York City, where she tackles tough problems in information security, particularly those revolving around data wrangling/visualization, building tools for gathering data, and knowledge sharing. She is also a core developer of [numpydoc](https://github.com/numpy/numpydoc), creator of the [numpydoc-validation pre-commit hook](https://numpydoc.readthedocs.io/en/latest/validation.html#docstring-validation-using-pre-commit-hook), and the author of \u201c[Hands-On Data Analysis with Pandas: A Python data science handbook for data collection, wrangling, analysis, and visualization](https://www.amazon.com/Hands-Data-Analysis-Pandas-visualization/dp/1800563450),\u201d which is currently in its second edition and has been translated into Korean and Chinese. She holds a bachelor\u2019s of science degree in operations research from Columbia University's Fu Foundation School of Engineering and Applied Science, as well as a master\u2019s degree in computer science, with a specialization in machine learning, from Georgia Tech. In her free time, she enjoys traveling the world, inventing new recipes, and learning new languages spoken among both people and computers.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/XUNCWK/", "id": 54000, "guid": "ac0c506b-6be9-5ab3-8eae-1b2ef1288227", "date": "2024-11-22T15:30:00+11:00", "start": "15:30", "logo": null, "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-54000-leveraging-the-rich-spatiotemporal-features-of-live-cell-imaging-with-machine-learning-and-ai", "title": "Leveraging the Rich Spatiotemporal Features of live cell imaging with Machine Learning and AI", "subtitle": "", "track": "Scientific Python", "type": "Talk", "language": "en", "abstract": "Live cell imaging is a microscopy technique, where scientists can observe dynamics of living cells across time. One such method, known as lattice lightsheet microscopy captures these processes at high spatiotemporal detail. However, current analyses methods do not always capture the complexities of these feature rich datasets. \r\nIn this talk, I will use an example of programmed cell death, where cells are exposed to different drugs. Using python packages, such as scikit-image and tsfresh,  I will demonstrate how we extract morphological and spatiotemporal features of cells. We use these features to train a supervised machine learning (ML) model to predict which drug treatment the cells were exposed to. \r\nFurthermore, using explainable AI with Shapley values, we identify key feature combinations that distinguish the cellular response to each drug. This approach enables data-driven hypothesis generation, allowing us to infer underlying phenotypes and correlate them to the biological processes.", "description": "Example of the cell death process, called NETosis\r\n\r\nhttps://www.youtube.com/watch?v=SFlcqRajLYE\r\n\r\nMore details on the technology:\r\n\r\nhttps://www.zeiss.com/microscopy/en/resources/insights-hub/life-sciences/driving-new-discoveries-with-lattice-light-sheet-microscopy-in-an-advanced-core-imaging-facility.html", "recording_license": "", "do_not_record": false, "persons": [{"guid": "a456e35a-0a90-52a2-87e6-9efe33cf59cf", "id": 47362, "code": "HVQBMZ", "public_name": "Pradeep Rajasekhar", "avatar": null, "biography": "I enjoy working at the interface of biology and computational methods, and applying them to complex biomedical research problems. I enjoy learning concepts from other domains and finding ways to apply them across disciplines. \r\n\r\nMore info: https://findaresearcher.wehi.edu.au/rajasekhar.p", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/CQDJ9K/", "id": 53969, "guid": "6da75501-384f-5857-83e7-4e80f1e83ecc", "date": "2024-11-22T16:10:00+11:00", "start": "16:10", "logo": "https://pretalx.com/media/pycon-au-2024/submissions/CQDJ9K/capillary_spinner_XEldohj.jpg", "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-53969-from-minutes-to-seconds-capillary-auto-alignment-with-python-and-opencv", "title": "From minutes to seconds: Capillary auto-alignment with python and opencv", "subtitle": "", "track": "Scientific Python", "type": "Talk", "language": "en", "abstract": "Samples used for diffraction experiments at the Australian Synchrotron, a research facility in Melbourne, are typically presented as finely ground powders confined inside very thin (1mm or less) glass capillaries. These samples are irradiated with X-rays in order to uncover their atomic crystal structures. Amongst our research areas, we study applications in mining, solar cells, perovskites, hydrogen storage, and geology, where understanding material properties at the atomic level can lead to advancements such as enhancing mineral extraction processes, improving solar cell efficiency, developing better hydrogen storage solutions, and analysing the composition of meteorites.\r\n\r\nTo ensure good data quality, the capillary needs to rotate precisely around its centre of rotation in front of the X-ray beam. Alignment of the centre of rotation is usually a manual operation that relies on the human eye and expertise to discern that the capillary is straight and stationary while it rotates around its axis; this process can be lengthy, error-prone, and difficult to achieve, especially for non-experts.\r\n\r\nIn this talk, I will demonstrate how we have united Python, OpenCV, and motion control systems to automate the capillary alignment procedure at the Australian Synchrotron, reducing the time to align a sample from several minutes to just 10 seconds.", "description": "", "recording_license": "", "do_not_record": false, "persons": [{"guid": "bf23e3bc-a4f3-50ef-be38-1f4f2d8776d2", "id": 47340, "code": "MSEC3L", "public_name": "Emily Massahud", "avatar": "https://pretalx.com/media/avatars/emily_massahud_pLJtvvo.jpg", "biography": "I am a Software Engineer at the Australian Synchrotron, working on the scientific computing team. My work focuses on automation of experiments, as well as data processing for the diffraction beamlines.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/A78TC9/", "id": 51559, "guid": "24711173-6bb2-55ad-aab5-b0df974d77f3", "date": "2024-11-22T16:50:00+11:00", "start": "16:50", "logo": null, "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-51559-avocado-cheese-grape-tomato-or-how-i-used-python-to-stop-worrying-and-love-emoji-in-bioinformatics", "title": "Avocado, Cheese, Grape, Tomato or: How I Used Python to Stop Worrying and Love Emoji in Bioinformatics", "subtitle": "", "track": "Scientific Python", "type": "Talk", "language": "en", "abstract": "Bioinformatics is the science of understanding and analysing biological information, such as the genetic information contained in DNA. It combines the disciplines of biology, computer science, and mathematics. If this seems daunting, don\u2019t panic, because this talk will focus on two open-source Python packages I have developed, FASTQE and Biomojify, that make common bioinformatics file formats intuitive and accessible\u2026. by using emoji.\r\n\r\nFASTQE simplifies DNA sequencing data analysis by taking numerical quality scores for the data, and summarising them using emoji to quickly convey the good, the bad, and the ugly of sequence data quality. Whether for training, outreach, or debugging, this tool can easily turn unremarkable data quality analysis into an appealing visualisation.\r\n\r\nBiomojify takes the concept further by converting plain text data to use emoji. In DNA, for example, the conventional format represents  individual A, C, G, and T nucleotides as plain text. Biomojify substitutes them with emojis such as avocado, cheese, grape, and tomato. It supports various bioinformatics file formats and supports user defined emoji mapping. It can be used to teach the underlying biological concepts behind bioinformatics data, by simplifying specialised data structures for a general audience. \r\n\r\nScience communication is hard. These tools transform complex bioinformatics data into engaging, emoji-based visualisations, making bioinformatics concepts more accessible and adding an element of fun to scientific education and communication.", "description": "This presentation will delve into the history and recent exciting developments of FASTQE and Biomojify. I will provide some background information on bioinformatics, and outline new developments such as support for new sequencing technologies and expanded emoji customization options. I will also present examples of teaching resources developed using these tools.\r\n\r\nAs a bioinformatician with over a decade of experience and the main developer of these tools, I would love to share my roadmap and encourage more contributors to join these projects. I\u2019m eager to share my love of bioinformatics with the Python community.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "a8366564-c52c-5f32-8cdb-0a9d14bf4692", "id": 45467, "code": "HBDX9R", "public_name": "Andrew Lonsdale", "avatar": "https://pretalx.com/media/avatars/32eac8bd4629b636cb2f7eb1adfc1e30_XwrpOAA.jpg", "biography": "Andrew had a background in software engineering before deciding to return to study bioinformatics in 2010. After completing the MSc, he was a research assistant and PhD student studying plant cell walls before crossing over to work on human biology in cancer and kidney projects. After submitting his thesis, he began a postdoctoral researcher at the Peter MacCallum Cancer Centre. There he has continued his research interests in the transcriptome of cancers. Andrew is a strong advocate for the discipline of bioinformatics, and enjoys teaching computing and bioinformatics skills.", "answers": []}], "links": [], "attachments": [], "answers": []}], "Eureka 3": [{"url": "https://pretalx.com/pycon-au-2024/talk/3GPQDE/", "id": 53995, "guid": "c3f58520-8d2f-5421-b867-4d8782845220", "date": "2024-11-22T10:00:00+11:00", "start": "10:00", "logo": null, "duration": "00:30", "room": "Eureka 3", "slug": "pycon-au-2024-53995-teaching-digital-technologies-in-australian-schools-with-python-and-the-kookaberry", "title": "Teaching Digital Technologies in Australian schools with Python and the Kookaberry", "subtitle": "", "track": "Education", "type": "Talk", "language": "en", "abstract": "There are around 6,200 primary schools around Australia, and the curriculum has a requirement to teach Digital Technologies, which includes a coding portion.  There are many challenges here, not least which is enabling the approximately 150,000 primary school teachers with the skills and resources to teach programming to young students.  The AustSTEM foundation was set up to assist in this area, and developed a MicroPython based learning platform, which consists of a pocket-sized computing device that integrates with a web-based coding and teaching environment.  The teaching material has many hands-on activities, with connections to nature and science.  In this talk we will discuss this teaching platform, how it can help students transition from block-based programming to textual coding, and show some of the successes we have had so far in Australian classrooms.", "description": "The non-for-profit AustSTEM foundation provides access and assistance to STEM learning\r\nacross Australian schools with emphasis on year 5 through to year 7.\u00a0 AustSTEM has developed\r\nthe Kookaberry learning platform which includes a small microcontroller-based board with\r\na screen, buttons, wireless connectivity, and facility to connect many different\r\nkinds of sensors.\u00a0 A web-based coding and teaching environment integrates with the\r\nKookaberry hardware and allows programming in both the visual Blockly language and Python,\r\nwith very easy transition between the two.\u00a0 Teachers also have the option to use a Raspberry\r\nPi Pico with add-on hardware within this learning platform, making the platform more\r\naccessible and flexible.\r\n\r\nMost programming in primary school is based on visual block-based languages like Scratch.\r\nThe Kookaberry leverages Blockly to provide a way for students to program physical\r\nhardware (a microcontroller running MicroPython) and interact with the environment through\r\nsensors such as accelerometers, pressure and moisture sensors and light sensors, and interact using\r\nLEDs and motors.\u00a0 They also learn about data logging and visualising results of experiments\r\nusing plots.\u00a0 This gives students a very hands-on approach to learning to program, which\r\nhelps to cement the learning objectives in the curriculum in real-world applications.\r\n\r\nFollowing on from learning to program in Blockly, the Kookaberry platform allows easy\r\ntransition to program in Python: the Blocks actually convert directly to Python snippets\r\nand so the students can gradually adapt their existing visual programming skills to\r\ntextual coding in Python.\r\n\r\nA big part of teaching students is first of all training teachers, and we will discuss\r\nsome challenges in this area, and how Kookaberry gives the teachers are given a wide range\r\nof teaching tools so they can adapt the platform to their style.\u00a0 We will show some lesson\r\nplans, which aim to attract and engage students of all ages and abilities.\r\n\r\nAs a bonus, the Kookaberry web-app is itself written in Python, and we will describe some\r\ntechnical details of how it all works.\r\n\r\nThere will be lots of pictures of kids in action!", "recording_license": "", "do_not_record": false, "persons": [{"guid": "b0725ff2-8ad4-5045-a012-d88728d1622f", "id": 30530, "code": "BHTKP3", "public_name": "Damien George", "avatar": "https://pretalx.com/media/avatars/DSC_9022-crop_95so5l7.JPG", "biography": "Damien was born in Melbourne, Australia, and has been programming and playing with\r\nelectronic circuits since primary school. He completed a Bachelor of Engineering and\r\nBachelor of Science at the University of Melbourne, and then went on to complete a PhD in\r\ntheoretical physics.\r\n\r\nDuring his studies he participated in the international Robocup competition, programming\r\nautonomous robots to play soccer. He wrote embedded software for scripted behavioural\r\ncontrol and motion, as well as building parts of the hardware. He has since continued in this\r\narea, building robots, a CNC machine, and writing embedded software for many\r\nmicrocontrollers.\r\n\r\nHe worked professionally as a theoretical physicist for 6 years, on various topics including\r\ncosmology and the Higgs boson. He then went on to develop MicroPython and ran two very\r\nsuccessful Kickstarter campaigns around this microcontroller language. He now works full-\r\ntime maintaining the MicroPython code-base and ecosystem.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/YYN7YH/", "id": 53963, "guid": "6022529c-b2b1-5cff-90a3-6508d8e63108", "date": "2024-11-22T11:00:00+11:00", "start": "11:00", "logo": null, "duration": "00:30", "room": "Eureka 3", "slug": "pycon-au-2024-53963-how-smart-is-ai-real-projects-to-build-real-understanding", "title": "How Smart is AI? \u2013 Real projects to build real understanding", "subtitle": "", "track": "Education", "type": "Talk", "language": "en", "abstract": "Chat GPT is all the rage in schools, and everyone is talking about AI, but how do we give students a real understanding of AI\u2019s capabilities and limitations? In this talk I\u2019ll demo how you can get students coding their own projects that explore (free) GPT technologies, integrating their own data sources, and contemplating when AI is the right solution.", "description": "This talk is designed for teachers, students, or anyone new to AI to get a better understanding of what \u201cAI\u201d is, to see the broad range of technologies \u201cAI\u201d can includes, and to demystify all pieces of terminology like GPT, LLMs, and more!\r\n\r\nI\u2019ll demo a light-weight project that you can use to get students leveraging GPT technology through their own code creations. We\u2019ll then add some of our own data to give it specialised knowledge in a technique known as \u201cRAG\u201d (Retrieval Augmented Generation). Through the process of testing out this project we\u2019ll then explore the moments where students can see behind the curtain of what tools like ChatGPT are actually doing, where they fall down and aren\u2019t as \u201csmart\u201d as they seem, and how and when to use AI responsibly. \r\n\r\nThis talk will specifically highlight an open-source option for playing with AI in Python so you can get your class coding on these tools for free.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "89ca3155-d337-5909-a225-ddce5284baa7", "id": 1523, "code": "TQKR8P", "public_name": "Renee Noble", "avatar": "https://pretalx.com/media/avatars/renee_pycon_tpf6eur.jpeg", "biography": "Renee Noble spends her time bringing together tech, teaching, and community in as many ways as possible.\r\n\r\nAs a Cloud Developer Advocate on the Python Advocacy team at Microsoft, she spends her time teaching the community through global events, creating Python learning resources, and local workshops for students and professionals. Renee is also the CEO and Co-Founder or Tech Inclusion, best known for Girls\u2019 Programming Network workshops that run around Australia. On top of this, Rene started her own Business, ConnectEd Code, bringing tech education opportunities to schools\r\n\r\nWell known for her work in tech education and the advancement of women, Renee was most recently awarded as Champion of Change 2023 by Women in Digital.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/XHTJ3S/", "id": 53958, "guid": "5925e1da-61d8-5927-9044-6fe0a6685392", "date": "2024-11-22T11:40:00+11:00", "start": "11:40", "logo": null, "duration": "00:30", "room": "Eureka 3", "slug": "pycon-au-2024-53958-transitioning-from-vb-to-python-mapping-a-6-month-journey", "title": "Transitioning from VB to Python \u2013 Mapping a 6 month journey", "subtitle": "", "track": "Education", "type": "Talk", "language": "en", "abstract": "In the past decade, this school has consistently exceeded VCE expectations in Software Development, largely due to well-developed resources, consistency in use of programming language (Visual Basic) and progression of skills through year 7 to year 12. However, a gap analysis in the teaching methodology has highlighted conceptual computational thinking and problem-solving skills as a key gap in the current offering. This was attributed to the curriculum's skills-based focus and the Covid-era teaching practice of flipped learning via video tutorials.  \r\n\r\nThis has presented an opportunity to overhaul the teaching methodology to focus on equipping students with the skills to apply their learning in different contexts.  Some key aspects of this transformation include a more live coding technique and transitioning to Python as the preferred programming language, due to its versatility and future prospects for students.  \r\n\r\nWe present this roadmap which leads to a complete overhaul of our teaching programmes from year 7 to year 12, scaffolding Python across Applied Computing, STEM projects, Robotics and Game development over the next 6 months.", "description": "", "recording_license": "", "do_not_record": false, "persons": [{"guid": "62a826fe-1ca0-5a16-909d-db9e1234d637", "id": 46556, "code": "BNHHZ9", "public_name": "Pravin vaz", "avatar": null, "biography": "Computing teacher", "answers": []}, {"guid": "3482029f-c167-5ca3-b21c-36da2c9f1cbb", "id": 47336, "code": "MK9KK8", "public_name": "Carolyn Gekas", "avatar": null, "biography": null, "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/WLCHUM/", "id": 53600, "guid": "8e4c6eef-fb6f-5c68-8ccf-015962594991", "date": "2024-11-22T12:20:00+11:00", "start": "12:20", "logo": null, "duration": "00:30", "room": "Eureka 3", "slug": "pycon-au-2024-53600-enhancing-programming-ability-with-playful-learning-and-karel", "title": "Enhancing Programming Ability with Playful Learning and Karel", "subtitle": "", "track": "Education", "type": "Talk", "language": "en", "abstract": "Beginner programmers often struggle to understand and trace program execution, which is worsened by underdeveloped debugging and testing skills. Beginners may also lack confidence or are easily demotivated, which can hinder learning. To assist students in developing these skills and build confidence we created a set of playful programming challenges and competition using Karel the Robot. The Karel system provides a 2D \u201cgrid world\u201d where the Karel character can move and interact with its environment. The 2D world is visualised for students so that they can immediately see how their program changes the environment step by step as well as the final program state. This is in contrast to traditional languages where learners must develop and maintain a mental model of the program state. This talk will cover our approach, preliminary results and feedback from students showing an increase in confidence and interest in programming. We will also share how this approach can be applied to other learning contexts.", "description": "Beginner programmers often struggle to understand and trace program execution, which is worsened by underdeveloped debugging and testing skills. Beginners may also lack confidence or are easily demotivated, which can hinder learning. To assist students in developing these skills and build confidence we created a set of playful programming challenges and competition using Karel the Robot.\r\n\r\nKarel the Robot was developed at Stanford to help students learn programming concepts without the burden of syntax and technicalities of a more general language. Karel provides a 2D \u2018grid world\u2019 where the Karel character can move and interact with the environment to carry out various tasks, e.g. walk through a maze. This gives students the opportunity for playful experimentation with code, which helps develop their understanding of programming concepts. Furthermore the 2D world is visualised for students so that they can immediately see how their program changes the environment step by step as well as the final program state. Karel makes the code tangible to the students, which  is in contrast to traditional languages where learners must develop and maintain a mental model of the program state.\r\n\r\nFortunately Karel uses a subset of Python, which allows students to naturally extend their learning to real Python, without learning new syntax. We found that Karel provides a convenient way to implement inductive teaching, which has been shown to enhance student's higher order thinking abilities and strengthen their understanding of concepts when compared to deductive teaching.\r\n\r\nThis talk will cover our approach, preliminary results and feedback from students showing an increase in confidence and interest in programming. We will also share how this approach can be applied to other learning contexts.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "1805e337-3194-5ee9-b585-f58fb764a7b6", "id": 11049, "code": "VXBVLZ", "public_name": "Stephen Tierney", "avatar": "https://pretalx.com/media/avatars/stierney_small_PfgTgMf.jpg", "biography": "Stephen is a Senior Lecturer at the University of Sydney in the fields of Statistics, Data Science and Machine Learning", "answers": []}, {"guid": "2b4a9bd9-59bd-5f2b-a3c6-818cb4deb8e3", "id": 11052, "code": "8NDWMQ", "public_name": "Alison Wong", "avatar": "https://pretalx.com/media/avatars/AlisonWONGFinal_TtKrbTY.jpg", "biography": null, "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/Z3KYJZ/", "id": 53788, "guid": "ed5d622d-54af-57b4-a0dc-017e4610dcdc", "date": "2024-11-22T13:50:00+11:00", "start": "13:50", "logo": "https://pretalx.com/media/pycon-au-2024/submissions/Z3KYJZ/python_raspberry_pi_1vIiofo.png", "duration": "00:30", "room": "Eureka 3", "slug": "pycon-au-2024-53788-build-your-own-iot-fun-with-python-and-raspberry-pi-", "title": "Build Your Own IoT! Fun With Python and Raspberry Pi.", "subtitle": "", "track": "Education", "type": "Talk", "language": "en", "abstract": "This talk will discuss building a basic streaming data pipeline for IoT applications using Python and Raspberry Pi. Attendees will have the opportunity to learn about Raspberry Pi, Apache Kafka + Kafka Connect, and solar power generation.", "description": "This isn't your grandfather's electronics shop - anyone can collect real-time data with Python! This talk aims to demystify the complex world of data and hardware, with real-world applications for the Western Australian electricity grid.\r\n\r\nWith the number of IoT devices expected to reach 29 billion by 2030, the significance of real-time data collection continues to grow. In this session, we will construct a basic microscale/hobby scale data collection system designed to serve as the backbone for an IoT application. Specifically, we will create a system to continuously collect voltage readings from a mini solar panel and record the data for future analysis. The system we develop can be easily adapted for different IoT applications.\r\n\r\nThis talk is designed to be conceptual, requiring only a basic understanding of Python and JSON. Whether you\u2019re a beginner, hobbyist, or professional, join us to explore the exciting world of data and IoT!", "recording_license": "", "do_not_record": false, "persons": [{"guid": "41c4e657-8721-58e1-b988-c5535a871e7e", "id": 47252, "code": "7SWEAL", "public_name": "A.J. Fisher", "avatar": "https://pretalx.com/media/avatars/1712749524080_SatwVlO.jfif", "biography": "A.J. is a passionate dataholic who can't go more than a few days without getting his data fix. With a background in process engineering, A.J. currently works as a Senior Analytical Engineer for Synergy in Western Australia, driving real analytical solutions for the Western Australian electricity grid. His hobby Python interests currently include IoT and web scraping applications.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/KFVD3Z/", "id": 53251, "guid": "a6486c10-687e-5dd3-bd04-e758102cfff0", "date": "2024-11-22T14:30:00+11:00", "start": "14:30", "logo": null, "duration": "00:30", "room": "Eureka 3", "slug": "pycon-au-2024-53251-as-a-teacher-i-have-no-time-to-learn-programming-streamline-assignment-marking-with-python", "title": "As a Teacher. I have no Time to learn Programming - Streamline Assignment Marking with Python", "subtitle": "", "track": "Education", "type": "Talk", "language": "en", "abstract": "Teaching is a demanding job that takes away the initiative to learn or improve in programming skills. I therefore decided to streamline some of my assignment marking using Python. The time I spent in developing the Python scripts could then be offset by the efficiency and accuracy I gained from the automation. \r\n\r\nIn this presentation, I will demonstrate how to populate student details into their individual Excel mark sheets, check marking mistakes, automate mark adjustment and collect data from individual mark sheets. \r\n\r\nWhile the above automation can be achieved using standard tools offered by Microsoft by putting the programming logic into Excel formulae or Visual Basic for Application, I will argue using Python to separate the logic from data is a better approach in terms of programming practice and Cybersecurity.", "description": "This talk is suitable for Python beginners and the set of Python scripts to automate assignment marking was developed in 2020 when I was teaching at the Hong Kong Baptist University. Each student was marked using standard assessment rubrics stored in an Excel spreadsheet. All the marks of a class of students are then stored in a folder of Excel files. I will demonstrate the automation of the following actions using Python libraries related to Excel such as openpyxl and xlwings.\r\n\r\n-Create individual student mark sheets with names and other details filled in\r\n-Check marking mistakes such as missing marks or giving marks above the highest score\r\n-Adjustment of marks in all mark sheets due to errors made in assignment design, etc.\r\n-Collect marks from each individual Excel mark sheet\r\n-Export Excel mark sheets to PDF format for archive purposes\r\n\r\nI will also compare the benefits of automating Excel using Python with Excel formulae and Visual Basic for Application by separating programming logic from data. Especially in the light of the Government Cybersecurity initiative \"Essential Eight Maturity Model\", Visual Basic for Application should be avoided and Python can be a viable solution.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "70a93bb1-df29-5cc0-a696-cd416135ba46", "id": 46923, "code": "WREQBQ", "public_name": "Haggen So", "avatar": null, "biography": null, "answers": []}], "links": [], "attachments": [], "answers": []}]}}, {"index": 2, "date": "2024-11-23", "day_start": "2024-11-23T04:00:00+11:00", "day_end": "2024-11-24T03:59:00+11:00", "rooms": {"Goldfields Theatre": [{"url": "https://pretalx.com/pycon-au-2024/talk/MW7E7N/", "id": 53922, "guid": "fbdd7198-fd4d-51e8-bf5e-de23baa52cc9", "date": "2024-11-23T10:40:00+11:00", "start": "10:40", "logo": null, "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-53922-making-an-open-source-package-lessons-learned", "title": "Making an open source package - lessons learned", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Making an open source package is pretty hard in 2024. Expectations are high, and there\u2019s a lot to take into account. I recently developed an open source package. This talk covers what worked, what didn\u2019t work, what I would do again and what I would do differently.\r\n\r\nI developed an open source package called \u201cscores\u201d ( https://github.com/nci/scores , https://scores.readthedocs.io/ ).  This is not a presentation about what \u201cscores\u201d does, but instead covers the lessons I learned. Despite being an experienced software developer and having used lots of open source software, there was still a lot to learn (and a lot to figure out) about open source package maintenance.\r\n\r\nEvery package is different, but this is what I did and these are the lessons I learned. \r\n\r\n- Technical Matters:\r\n    - How to lay things out on disk\r\n    - Configuration files\r\n    - Automated testing\r\n    - Type hinting\r\n    - Linting and other static analysis tools\r\n    - Code layout and design\r\n- Documentation:\r\n    - What documentation to produce\r\n    - Picking and using a tech stack\r\n    - Rendering (documentation often renders differently in different locations)\r\n- Ecosystem Integration:\r\n    - How to fit in well with the tools around you\r\n    - Versioning \r\n    - Publishing to PyPI\r\n    - How and what to automate\r\n    - How to do releases\r\n- Community Considerations:\r\n    - Code review standards\r\n    - Clear presentation of information\r\n    - Understanding your user base and audience", "description": "Making an open source package is pretty hard in 2024. Expectations are high, and there\u2019s a lot to take into account. I recently developed an open source package. This talk covers what worked, what didn\u2019t work, what I would do again and what I would do differently.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "cb3994f8-4040-5a3d-923b-48a03fc22099", "id": 1356, "code": "ZZQ9TE", "public_name": "Tennessee Leeuwenburg", "avatar": "https://pretalx.com/media/avatars/Profile_Photo_Tennessee_Leeuwenburg_JwewX1k.jpg", "biography": "Tennessee Leeuwenburg is a data scientist and software developer with over 20 years of experience. He has an interest in open source software, machine learning, and forecast verification. His current research work includes the development of scientific machine learning models for weather and environmental prediction. For an overview of his recent publications, please visit https://orcid.org/0009-0008-2024-1967 .", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/TWFSTJ/", "id": 53637, "guid": "07bca09c-5979-5b69-9d9d-77446bf9aaab", "date": "2024-11-23T11:20:00+11:00", "start": "11:20", "logo": null, "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-53637-serpents-and-ducks-wrangling-data-with-python-and-duckdb", "title": "Serpents and Ducks: wrangling data with Python and DuckDB", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Got a billion rows of data in a weird file format? Wishing you could wrangle a dataframe from a geospatial dataset? A bit lost interacting with a remote API? Let\u2019s wrangle some data with Python and DuckDB. \r\n\r\nDuckDB executes analytical SQL queries without the need for a server. DuckDB features a deep and deceptively simple integration with the Python ecosystem, allowing us to query, wrangle, and output data, alongside all your favourite Python tools.. Its powerful analytical features and rich integrations position DuckDB as an invaluable tool for anyone working with analytical data in Python, helping you solve complex problems with ease and elegance. \r\nIn this practical talk, we\u2019ll introduce DuckDB, a fast and versatile analytical database to keep in your data toolkit. We\u2019ll go through how to use the DuckDB Python client effectively, taking advantage of DuckDB\u2019s efficient data processing features, as well as its integrations with libraries like Pandas and Ibis.", "description": "", "recording_license": "", "do_not_record": false, "persons": [{"guid": "127307fb-a600-5122-99fe-e9ebe1ff29b8", "id": 47166, "code": "87LT9Q", "public_name": "Simon Aubury", "avatar": null, "biography": "Simon Aubury serves as an Associate Director of Data Platforms at Simple Machines. Simon describes his job to his children as being a \u201cdata geek\u201d.  Although it doesn\u2019t impress his kids,  he is proud to have worked around the globe building highly available distributed data systems for finance, transport, health care, insurance and telecommunications clients.", "answers": []}, {"guid": "b7f3d54c-4301-54cb-809e-759bba4bd7b9", "id": 1662, "code": "PAMFZZ", "public_name": "Ned Letcher", "avatar": "https://pretalx.com/media/avatars/ned_profile_pic_sxnDbKl.jpg", "biography": "Ned is a lead data science engineer at Thoughtworks Australia. He\u2019s worked across a range of sectors and domains, applying machine learning, natural language processing, and data analysis & visualisation to business challenges and opportunities. Ned has used these experiences to develop strategies for making effective use of data & AI for identifying and framing the business value of data science and analytics initiatives. Ned is also a co-author of Getting Started with DuckDB, recently published by Packt.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/ZEKYUW/", "id": 53780, "guid": "c785b5ac-5d74-5642-b119-b543c71e652e", "date": "2024-11-23T12:00:00+11:00", "start": "12:00", "logo": null, "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-53780-performant-python", "title": "Performant Python", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "An introduction to writing performant Python code - the \"what, why, where, when and many how's\" of performance analysis, testing, tools and techniques.", "description": "Why, as Python developers, should we care about writing performant code? Python doesn't have a great reputation when it comes to performance, but this does not need to be the case!\r\nIn this talk we will cover:\r\n- <b>What do you mean by 'Performant'?</b> We'll talk briefly about the different metrics that can measure the performance of software, and the history of performance in Python.\r\n- <b>Why, Where and When?</b> Performance should be an important consideration in the code we write and distribute, however performance analysis and improvement can be a time-consuming endevour, so we will look at how to identify where this time is best invested, and why.\r\n- <b>How do I start?</b> There are many tools available; libraries, IDE extensions, command line tools, and of course, within the Python standard library, so we will explore options and what benefits each provides.\r\n- <b>How do I find issues?</b> Trying to improve the performance of code is not like regular debugging - we will look at how to use these tools to identify problem areas in the code by looking through some examples.\r\n- <b>How do I fix it?</b> There's always more than one solution to a performance problem. We'll look at how our example issues could be mitigated and the pros and cons of varying approaches, including the use of compiled extensions.\r\n- <b>How do I know when I'm finished?</b> Is my code performant <i>enough</i>? Improving performance can be highly iterative, with changes yielding only minor incremental improvements. We will talk about some of the challenges in determining success criteria, and trying to cost estimate performance work.\r\n\r\nThis talk will touch on some more advanced Python syntax, as well as peeking into how the Python language works, so some basic coding experience is assumed. However, the topics and techniques discussed will be applicable to developers of all levels.\r\n\r\nSome things we won't cover:\r\n- High-level architecture for high performance systems. This talk will mostly focus on lower-level code structure and syntax.\r\n- C/Rust extensions will not be covered in detail in this talk, however we will take a look at identifying when an extension could be a good fit to solving performance problems, and the pros and cons of this approach.\r\n- In this talk we will focus on the execution time of CPU-bound code as the measure of performance, so we won't discuss other performance metrics, such as memory usage or IO traffic.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "340f6bea-03d9-5c9b-945f-585a6fca8f4f", "id": 47251, "code": "97JLNB", "public_name": "Anna Tisch", "avatar": null, "biography": "I have been a Python developer for over 10 years, based between Wellington, New Zealand and Redmond, Washington. For over six of those years, I have been working for Microsoft on the Azure SDK for Python.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/R9ZKZC/", "id": 53869, "guid": "b9fbabb6-940f-500f-a11b-d12accc32bc3", "date": "2024-11-23T13:30:00+11:00", "start": "13:30", "logo": null, "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-53869-let-s-make-a-working-implementation-of-async-functions-in-python-2-1-also-why-you-might-want-to-use-a-more-recent-version-of-python", "title": "Let's make a working implementation of async functions in Python 2.1, also, why you might want to use a more recent version of Python", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Often I hear people lamenting that Python has too many features and that older versions of Python were better for that exact reason.\r\n\r\nTo make those people happy, we're going to pick apart the features of Python that enable the `async`/`await` syntax, layer by layer, until we happen upon a working implementation of coroutines that will function in Python 2.1.\r\n\r\nSomewhere in this talk will be some useful discussions about why recent syntactic developments in Python are a good thing actually, but let's not lie, you're reading this abstract for the stunt content. You'll get what you came for.", "description": "", "recording_license": "", "do_not_record": false, "persons": [{"guid": "534641cb-8f50-583e-b413-a11ea45a0563", "id": 1616, "code": "QWCHX7", "public_name": "Christopher Neugebauer", "avatar": "https://pretalx.com/media/avatars/chrisjrn-unicorn_LLQw4TY.jpg", "biography": "Christopher Neugebauer is an Australian developer, speaker, and serial community conference organiser, who presently lives in the United States.\r\n\r\nHe serves as a Director of the Python Software Foundation, and is co-organiser of the acclaimed North Bay Python conference, a boutique one-track conference run in unusual venues \u2014 include an old vaudeville theatre, and more recently a barn on a farm \u2014 in Petaluma, California.\r\n\r\nChristopher is also a contributor on the open source Pants build system, helping make Python\u2019s testing, correctness, and style tools accessible and fast for developers, no matter how big their codebase.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/CFS9GH/", "id": 53013, "guid": "9526548c-0d22-587e-a16d-852937723b05", "date": "2024-11-23T14:10:00+11:00", "start": "14:10", "logo": null, "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-53013-what-python-can-learn-from-other-languages", "title": "What Python Can Learn From Other Languages", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Python is great! It's been a mainstay of web development and systems programming for decades and is on the cutting edge of many fields like scientific computing. But there is always more to improve, both in the language itself and how we use it. This talk will look at how ideas and features from other languages like Ruby, Go, and PHP could be used to improve Python!", "description": "From PHP autolaoders to Goroutines, there's many features in the world of programming languages that Python lacks. This talk will outline many features from other language communities that could be used both to improve existing codebases and, more deeply, to improve and evolve Python itself.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "7f968729-b7f0-559b-b42a-c177af8d1073", "id": 1672, "code": "MY7QMZ", "public_name": "Noah Kantrowitz", "avatar": "https://pretalx.com/media/avatars/headshot_00YX2vK.jpg", "biography": "Noah Kantrowitz is a web developer turned infrastructure automation enthusiast, and all around engineering rabble-rouser. By day he runs infrastructure at Geomagical/IKEA and by night he makes candy and stickers. He is an active member of the DevOps community, and enjoys merge commits, cat pictures, and beards.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/GF3NJK/", "id": 53911, "guid": "a543414a-e2ce-5aa5-a4db-45bf59320c5a", "date": "2024-11-23T14:50:00+11:00", "start": "14:50", "logo": null, "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-53911-failsafes-and-safety-fails-how-to-crash-a-train-and-other-lessons-for-software-engineers", "title": "Failsafes and Safety Fails: How to crash a train and other lessons for software engineers", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Software builders and operators have long looked to transport and aviation for lessons in engineering practices and safety. Today, we\u2019ll turn our attention to the railways as we take 20 years of hindsight to look at the \u2018Broady runaway\u2019 and what it can teach us. This talk will dive into the ATSB\u2019s subsequent safety investigation, recommendations and parallels in the software world, offering us critical lessons in complex system design and incident management.\r\n\r\nFor software engineers, architects, managers and executives this is an opportunity for us to reflect and learn from the past so that we can build more resilient and easier to operate platforms in the future.\r\n\r\nOur runaway train is a 3 car electrical multiple unit (EMU) that, in 2003, did the full 17km Broadmeadows to Spencer st run in just 16 minutes, famously without a driver on board. The cause of the runaway and resulting collision with a stationary diesel locomotive has been the talk of many rail enthusiasts ever since, especially since there were no fatalities or serious injuries.", "description": "", "recording_license": "", "do_not_record": false, "persons": [{"guid": "2bbeaf8c-83e0-5205-ba1c-faa9507e504d", "id": 32818, "code": "PB9BKD", "public_name": "Jack Skinner", "avatar": "https://pretalx.com/media/avatars/228a543862b1b9c1e7f3b812620b1471_D363AsG.jpg", "biography": "Jack is a consultant CTO For Hire, specialising in all things web and APIs. He consults to small and growing software companies on patterns and practices for scaling teams and technology. He\u2019s spent the past decade growing technical communities as a speaker, organiser, facilitator and coach.", "answers": []}], "links": [], "attachments": [], "answers": []}], "Eureka 2": [{"url": "https://pretalx.com/pycon-au-2024/talk/JD8WMZ/", "id": 53704, "guid": "ceca295b-70f7-52a6-99cf-a2b5532eeb4f", "date": "2024-11-23T10:40:00+11:00", "start": "10:40", "logo": "https://pretalx.com/media/pycon-au-2024/submissions/JD8WMZ/IMG_3045_oqaQEKd.jpeg", "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-53704-ai-perceptions-of-gender", "title": "AI perceptions of gender", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Why does AI perceive gender? Is this something that can be fixed? Should it be fixed? Explore the results of my research encompassing art, AI and gender theory to find out the why and how of gender perception.", "description": "My PhD subject was AI perceptions of gender. I will take you through my key findings, my artwork projects created to explore this topic and how that research has progressed today in the days of generative AI. I will explore perception theory, gender theory and art all using AI to show why gender is fundamentally misunderstood by machine learning systems and ask the question why are we still letting machines assign gender to us?", "recording_license": "", "do_not_record": false, "persons": [{"guid": "9de83a45-362e-5c12-bc5e-986f671251b6", "id": 1547, "code": "PFTMME", "public_name": "J. Rosenbaum", "avatar": "https://pretalx.com/media/avatars/headshot1_PdnFrwR.jpeg", "biography": "J. Rosenbaum is a Melbourne AI artist and researcher working with 3D modeling, artificial intelligence and extended reality technologies. Their work explores posthuman and postgender concepts using classical art combined with new media techniques and programming.\r\n\r\nJ has a PhD from RMIT University in Melbourne at the School of Art exploring AI Perceptions of Gender and the nature of AI generated art and the human hands behind the processes that engender bias, especially towards gender minorities. Their artwork highlights this bias through programmatic interactive artworks and traditional gallery displays. They speak at conferences worldwide about the use of artificial intelligence in art and have exhibited all over the world. J\u2019s artwork has been supported by the City of Melbourne Covid-19 Arts Grants and has won the Midsumma Australia Post Art Prize.\r\n\r\nJ works with classically inspired aesthetics with the latest technologies to create a speculative future grounded in the aesthetics of the past to show that gender minorities have always been here and will continue into the future.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/Q78MDT/", "id": 53874, "guid": "e9abc9b2-8a9c-544d-ba87-efd81c8c4202", "date": "2024-11-23T11:20:00+11:00", "start": "11:20", "logo": null, "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-53874-embeddings-how-computers-learned-to-read", "title": "Embeddings: How Computers Learned to Read", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "As large language models take over the world, we\u2019re now working alongside machines that can read, write and converse \u2013 coding with CoPilot, chatting with ChatGPT and drawing with DALL-E. But how do machines, which fundamentally operate on binary code, achieve such remarkable feats? The answer lies in embeddings. Embeddings allow us to represent complex data - whether it's text, images, or even abstract concepts - as dense vectors of numbers. In this presentation, we'll demystify embeddings and give you a practical and intuitive understanding of how they work.", "description": "Artificial Intelligence, Large Language Models, and Machine Learning have revolutionized our ability to automate complex tasks that once required significant human time and effort. But how do machines, which fundamentally operate on binary code, achieve such remarkable feats? The answer lies in embeddings - a powerful concept at the heart of modern AI. Embeddings are the bridge between human-understandable information and the numerical language of computers. They allow us to represent complex data - whether it's text, images, or even abstract concepts - as dense vectors of numbers. In this presentation, we'll demystify embeddings and give you a practical and intuitive understanding of how they work.\r\n\r\nWe'll dive into:  \r\n1. What are embeddings and how they enable machines to process and understand human language\r\n2. How you can create your own embeddings or utilise existing embedding models to encode language in Python\r\n3. How embeddings underpin LLMs \r\n\r\nBy the end, you'll have a solid grasp of this fundamental AI concept and be equipped to start experimenting with embeddings in your own projects.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "531d4649-5b84-58dc-8245-f4800f3d2731", "id": 47306, "code": "7D78ZU", "public_name": "Liam Bluett", "avatar": null, "biography": "I've been working in data science/analytics for around 3 years now, my tool of choice: Python.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/LGDUVR/", "id": 53997, "guid": "3873569b-0831-589c-89ff-8360b178d0df", "date": "2024-11-23T12:00:00+11:00", "start": "12:00", "logo": null, "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-53997-ml-ain-t-your-only-hammer-adding-mathematical-optimisation-to-the-data-scientist-s-toolbox", "title": "ML ain\u2019t your only hammer: adding mathematical optimisation to the data scientist\u2019s toolbox", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "The purpose of this presentation is to introduce the audience to the field of mathematical optimisation - what it is, how it differs from machine learning, and the types of problems it is best suited to solve.\r\n\r\nThe first section will provide this context and background - describing the anatomy of an optimisation problem, and what the model building process looks like. We will touch on the characteristics common to optimisation problems seen across multiple industries.\r\n\r\nWe will then build a simple optimisation model together, demonstrating how the model building process compares to the machine learning approach.\r\n\r\nFinally, we will end by exploring some of the most fascinating applications of mathematical optimisation in industry, focussing on the characteristics that the audience can map to challenges that are specific to their own industry.", "description": "What do you do if the problem you want to model has little or no clean and available historic data? Or, what if you do have historic data, but things have changed so much that it is no longer possible to use that data to make predictions about the future? On top of that, what if you want your model to incorporate hard constraints that it cannot violate, and these constraints can lead to extremely different modelled outcomes?\r\n\r\nMany data scientists would recognise that for these kinds of problems, most machine learning algorithms tend to struggle. However, it is precisely for this reason that the field of mathematical optimisation (MO) was developed. Despite flying relatively under the radar in the data science community, MO plays a critical role solving problems in multiple sectors. The airline industry for example, is so dependent on MO for plane and workforce scheduling, that an entire fleet of planes will be grounded if a bug prevents one of these models solving.\r\n\r\nIn this presentation, we will introduce the audience to the field of mathematical optimisation, and the types of problems it is exceptionally good at solving. We\u2019ll build a simple model together, and explore how different the approach is to developing a machine learning model. By the end of this talk, we hope many members of the audience will be able to map MO to a problem they are actively trying to solve, and they will be excited to explore applying this technique.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "4c725c2c-f613-5e3c-a190-75c99743bf61", "id": 30512, "code": "HQSSZQ", "public_name": "Dr Jack Simpson", "avatar": "https://pretalx.com/media/avatars/jack_KOm8jei_KQth295.jpg", "biography": "Jack is a Director at Endgame Economics, a boutique consulting firm that specialises in providing quantitative advice in the energy sector. He has over a decade of experience working as a consultant, data scientist, and software developer. \r\n\r\nHe holds a PhD in computational biology, and has extensive expertise applying mathematical optimisation and machine learning techniques to solve problems in the energy sector.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/HMWPGH/", "id": 53986, "guid": "6b19fd94-006c-53ff-bb8f-25d44e088e60", "date": "2024-11-23T13:30:00+11:00", "start": "13:30", "logo": "https://pretalx.com/media/pycon-au-2024/submissions/HMWPGH/Potnia_SessionImage_sE5a2jq.png", "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-53986-introducing-potnia-a-python-language-library-for-the-conversion-of-ancient-texts-to-unicode", "title": "Introducing Potnia: A Python language library for the conversion of ancient texts to Unicode", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "The last five years have seen a significant increase in the application of machine learning to the study of ancient scripts. Applications are broad, and include recognition via Optical Character Recognition (OCR), textual restoration, palaeographic analysis, topic modelling, representation learning, decipherment and machine translation (Sommerschield 2023). A large number of ancient language corpora have been digitised in recent decades, supporting this research. However, while the necessary Unicode blocks for many of these ancient scripts are available, a number of these data sets are still presented as Romanised transliterations.\r\n\r\nIn response to this situation, we have created Potnia (https://pypi.org/project/potnia/), an open-source Python language library under the Apache 2.0 license, designed to convert such transliterated texts to Unicode. The session image accompanying this proposal provides an example of Potnia\u2019s conversion process, with a Romanised transliteration of a Linear B text as the input, and the Unicode representation of this same text as the output. This conversion is crucial for downstream machine learning tasks, as tokenisation in the original Unicode script allows for more accurate representation of linguistic structures and mitigates potential biases introduced by transliteration.\r\n\r\nPotnia's flexible architecture, built on Python's object-oriented principles, employs string manipulation techniques and regular expressions to handle various complexities inherent in ancient texts, such as uncertain readings, missing elements, and script-specific notations. At present, the library can be used for Linear B texts, with functionality for Linear A, Sumerian and Akkadian soon to follow.\r\n\r\nPotnia's design allows for easy addition of new scripts, each with its own set of rules for tokenisation, regularisation, and character mapping. This extensibility positions us well for future inclusion of additional scripts. To ensure reliability and facilitate open-source contributions, we've implemented a comprehensive test suite using pytest, with test cases defined in YAML files for easy expansion. This approach covers key functionalities across different scripts and simplifies the process of adding new test scenarios as the library grows.\r\n\r\n<b><em>References</em></b>\r\nSommerschield, T., Y. Assael, J. Pavlopoulos, V. Stefanak, A. Senior, C. Dyer, J. Bodel, J. Prag, I. Androutsopoulos, and N.D. Freitas. 2023. \u201cMachine Learning for Ancient Languages: A Survey.\u201d <em>Computational Linguistics</em> 49 (3): 1\u201345. doi:10.1162/coli_a_00481.", "description": "", "recording_license": "", "do_not_record": false, "persons": [{"guid": "a62a3087-3368-5711-a016-a7c5d9312b78", "id": 47354, "code": "ZUWBQU", "public_name": "Emily Tour", "avatar": "https://pretalx.com/media/avatars/Knossos_Site_2_WM4L6aW.jpg", "biography": "Emily Tour (she/they) is an archaeologist and PhD candidate at the University of Melbourne. Their research focuses on the study of Bronze Age Aegean administrative documents; in particular, the application of digital methods such as 3D modelling, shape analysis and phylogenetics to better understand these artefacts. In addition to their PhD research, Emily is involved in an ongoing collaboration with the Melbourne Data Analytics Platform (MDAP), exploring the application of deep learning techniques to the decipherment of ancient scripts, including the presently undeciphered Linear A. Prior to retraining as an archaeologist, Emily worked in the IT industry as a software tester and business analyst, and is passionate about combining both her digital and archaeological skills for improved research outcomes, as well as supporting and promoting the uptake of digital techniques in the humanities. Emily is a current committee member for the Australasian chapter of Computer Applications and Quantitative Methods in Archaeology (CAA).", "answers": []}, {"guid": "8ab98e33-041f-5cc3-b0e3-47e0faec5bc2", "id": 47361, "code": "YJFZGW", "public_name": "Kabir Manandhar Shrestha", "avatar": null, "biography": null, "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/9KD9HJ/", "id": 53978, "guid": "e539021e-d46f-514f-a0e5-b1e22b473f1d", "date": "2024-11-23T14:10:00+11:00", "start": "14:10", "logo": null, "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-53978-cultural-and-linguistic-influences-on-translation-a-study-of-novels", "title": "Cultural and Linguistic Influences on Translation: A Study of Novels", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "How do translations preserve the original meaning, style, and sentiment of texts across different languages and cultural contexts? This intriguing question drives our study as we delve into the complexities of translation.\r\n\r\nWe examine how sentiment analysis results differ for the same text in various languages, aiming to understand the role of language families in these variations. Using natural language processing techniques in Python, we analyse novels from diverse genres, time periods, and cultural backgrounds to uncover generalisable translation patterns.\r\n\r\nOur study seeks to answer whether translations of words, ideas, and societal contexts in novels are influenced by the cultural contexts into which they are translated. By highlighting the importance of accurate and culturally relevant translations, we emphasise how they play a crucial role in preserving cultural and societal knowledge, ensuring that the richness of the original text is maintained across languages.", "description": "Our project aims to find out how closely translations preserve the original meaning and style of text, whether the sentiment expressed in the original text is consistently preserved across different translations, and how sentiment analysis results vary for the same text in different languages. \r\n\r\nAs such, we have chosen novels based on different genres and societies, so that we can analyse words in various contexts. We have also chosen our novels based on the languages we are analysing, making sure we include books that are originally written by both languages and other languages. \r\n\r\nIn this project, we created several study groups of languages. For instance, we might put English with Mandarin Chinese together, so that we can analyse different language families. In each language group, we will assign source and target language, and find the translation patterns within the group. To generalise translation patterns, we repeated the analyses on multiple books and across multiple language groups. Then, we applied feature extraction to extract semantic, stylistic, syntactic and sentiment features from translations of novels. And lastly, to apply sentiment preservation by applying sentiment analysis and comparative semantic analysis to generalise language features in translation. \r\n\r\nThis project is important to us because we are both students from multilingual backgrounds and interact with translations every day. We realised that the same articles translated into different languages may not necessarily bring out the same ideologies or sentiments. Therefore, we are interested in how translation of a text will vary in different contexts, and whether the language family plays a big role in this. We believe this project is important as it can impact how one would understand particular historical, cultural or societal knowledge of a community if not done well. \r\n\r\nWe considered the differences in translation styles when translated by different authors, as well as different editing styles. To conquer this, we analysed works from different authors and translators to minimise the impact of stylistic differences.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "bd3320f4-8fdf-5dda-94d6-048be1c3b2be", "id": 47345, "code": "R3ENGB", "public_name": "Anneysha Sarkar", "avatar": null, "biography": "Hi, I am Anneysha, I am studying Advanced Computing at the Australian National University. I love languages, and learning as many language scripts as I can!\r\n\r\nI am interested in solving problems using a human-centric approach with strong backing from existing data and applying computational techniques to it, such as Natural Language Processing, and Machine Learning. In my free time, I like watching anime, cooking (things I\u2019ve never made before!), and travelling.", "answers": []}, {"guid": "6aa9b061-95cb-5918-8d3b-b127521d4c1b", "id": 47360, "code": "GNVTMG", "public_name": "Eliz So", "avatar": null, "biography": "I\u2019m Eliz, a student from Australian National University (ANU) studying a double degree in Politics, Philosophy and Economics and Science (majoring in Computer Science and minoring in Mathematics). I have been fascinated by how computing works since young, and decided to learn programming then! \r\nIn my free time I enjoy creating 3D models, photography and videography, playing music and bouldering. I\u2019m looking forward to putting my computing skills in my hobbies as well, such as integrating computer vision with photography and videography. In the meantime, I would love to learn more about different aspects in machine learning and theoretical computing.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/YNDDJR/", "id": 53923, "guid": "8b205200-a3d2-5533-ad31-2fad93ac999c", "date": "2024-11-23T14:50:00+11:00", "start": "14:50", "logo": "https://pretalx.com/media/pycon-au-2024/submissions/YNDDJR/Adventures_in_Phylogenetics_Image_Ojdq4bK.jpg", "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-53923-walking-the-tree-of-life-adventures-in-phylogenetics", "title": "Walking the Tree of Life \u2013 Adventures in Phylogenetics", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "\"What's the last common ancestor of a bear and a weasel?\"\r\n\"Which animals are more related to pigs than cows?\"\r\n\"Are birds reptiles?\"\r\n\"Am I a fish?\"\r\n\r\nWith a recent interest in phylogeny \u2013 the science of evolution, diversification, and speciation \u2013 these are the kinds of questions I've been asking myself. I wanted to find a tool that would let me examine the relationships between species and find the answers to these questions, but, as I looked around I couldn't find anything that did what I wanted. So I made it myself.\r\n\r\nCome with me as I share my journey that led me to talk to some of Australia's top scientists, give up on talking to other top scientists, and accidentally stumble my way into making an actual contribution to science. Learn why I made this tool, how I made this tool, what stage it's at, and where you can use it yourself. And maybe learn some things about life on Earth along the way.\r\n\r\nOh, and to answer the questions above: dog-bears, peccaries, yes, and yes!", "description": "I've always been interested in zoology \u2013 my dad has a degree in zoology \u2013 and over the past year or two, I've started learning more about phylogeny. Phylogeny is the study of the evolution of species, seeking to understand their common ancestors, when and how they branched, and how closely related various species are.\r\n\r\nA common tool in phylogeny is the cladogram, a \"tree of life\" showing the different relationships between species. Cladograms are a great tool for understanding a family of organisms. However, when I started wanting to explore cladograms myself, I couldn't find anything that had all the features I wanted. This led me to start building it myself, and as I did so, I started thinking that maybe it was something that scientists and educators might find useful.\r\n\r\nAnd so I dove into the problem with gusto, and built a cladogram tool that could do it all, and is nice and user friendly, and great for students of all ages. In this talk I'll explain what I wanted it to do, the saga of trying to work out if it already existed, and how I built the tool. I'll also show you where you can access it to try out yourself and maybe learn something interesting about your favourite animal!", "recording_license": "", "do_not_record": false, "persons": [{"guid": "0f19e348-16d3-58be-9a6b-63467a63233f", "id": 1684, "code": "8UFZNX", "public_name": "Jack Reichelt", "avatar": "https://pretalx.com/media/avatars/profile-pic_qQ6v2SB.png", "biography": "As CTO of two small education related startups (ConnectEd Code and Kumo Study) and with plenty of varied consulting under my belt, I have a focus on how tech can help other fields progress. I love to learn what the problems are and how I can actually make an impact, ideally with as simple a program as possible.\r\n\r\nI\u2019ve been using Python for years, working in both the professional and education sectors, and have focussed on bringing the power of Python to everyone.", "answers": []}], "links": [], "attachments": [], "answers": []}], "Eureka 3": [{"url": "https://pretalx.com/pycon-au-2024/talk/MBZSKZ/", "id": 52663, "guid": "ea39c034-b11c-570a-86aa-f53a4f0fd7e9", "date": "2024-11-23T10:40:00+11:00", "start": "10:40", "logo": null, "duration": "00:30", "room": "Eureka 3", "slug": "pycon-au-2024-52663-where-am-i-what-am-i-doing-mobile-app-development-in-python", "title": "Where am I? What am I doing? Mobile App development in Python", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "A modern mobile phone isn't just a powerful CPU and display. It's a collection of incredibly sophisticated portable sensors: multiple cameras, a high resolution GPS, accelerometers and more. In this talk, you'll learn how to build and run an app on your phone that can access these sensors, using nothing but Python.", "description": "The BeeWare project provides the tools to build a native, cross-platform app for Android and iOS, using nothing but Python. In this talk, you'll learn how to use the tools provided by BeeWare, including Briefcase to bootstrap and deploy an app; and Toga to build GUI and access platform-native APIs. You'll learn about how to manage the device permissions required to access hardware; and you'll get a brief introduction to how you can access APIs for which Toga doesn't provide a cross platform API.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "500cd020-8904-508a-956e-9a8286965d96", "id": 1087, "code": "LDFVBH", "public_name": "Russell Keith-Magee", "avatar": "https://pretalx.com/media/avatars/b91373320dbc3bc52fcd870d3b21748f_UHhnDR7.jpg", "biography": "Dr Russell Keith-Magee is the founder of the BeeWare project, a project developing GUI tools and libraries to support the development of Python software on desktop and mobile platforms. He joined the Django core team in 2006, joined the Python core team in 2024, and was the President of the Django Software Foundation for 5 years. He is a frequent speaker at Python and Django conferences around the globe, sharing his experience as a FLOSS developer, community maintainer, and (unsuccessful) startup founder. In his day job, he is a Principal Engineer at Anaconda, working on BeeWare in the OSS team.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/CERBXC/", "id": 52338, "guid": "621657e1-1cf5-51d0-adbf-4140e2a3a3df", "date": "2024-11-23T13:30:00+11:00", "start": "13:30", "logo": "https://pretalx.com/media/pycon-au-2024/submissions/CERBXC/2023-08-09_15.52.01-2_M3j6Y0m.jpeg", "duration": "00:30", "room": "Eureka 3", "slug": "pycon-au-2024-52338-from-seeds-import-plants-using-iot-to-grow-healthy-herbs", "title": "from seeds import plants: using IoT to grow healthy herbs", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "With the current climate crisis and the rise of households growing their own fruits, vegetables and herbs, the efficient use of potable water is crucial now more than ever. However, the majority of plant watering systems are either manual or time based - that is, they water plants on a pre-defined schedule. This talk will describe a simple automated watering system programmed with micropython and various extensions to the core product to simplify existing features and add new capabilities using various internet of things devices and data analytics tools.", "description": "With the current climate crisis and the rise of households growing their own fruits, vegetables and herbs, the efficient use of potable water is crucial now more than ever. However, the majority of plant watering systems are either manual or time based - that is, they water plants on a pre-defined schedule. \r\n\r\nThis talk will:\r\n- show Core Electronics' plant_io system that was used to grow alfalfa seeds based off soil moisture and give a foundation introduction to the MicroPython code,\r\n- explore some hardware extensions made to the base system to collect further environmental data based off additional IoT sensors,\r\n- describe some other software and hardware extensions made to the base system to allow remote monitoring and data analysis, and\r\n- propose directions for future research.\r\n\r\nThis talk would be of interest to people with an interest in horticulture, Internet of Things devices, MicroPython and Raspberry Pi programming as well as data analysts.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "8952d6a4-f91e-5f4d-8689-74e312cc3b8a", "id": 1262, "code": "DEZCB8", "public_name": "Anthony I. Joseph", "avatar": "https://pretalx.com/media/avatars/Image_from_iOS_XuOClu6.jpg", "biography": null, "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/HFXFLZ/", "id": 53919, "guid": "391bf372-3ebc-5bcc-9fea-7757f8392262", "date": "2024-11-23T14:10:00+11:00", "start": "14:10", "logo": null, "duration": "00:30", "room": "Eureka 3", "slug": "pycon-au-2024-53919-micropython-the-best-bits-", "title": "MicroPython: The best bits!", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "MicroPython continues to grow in popularity. But _why_? What is it about this pint-sized version of Python that makes it so darn compelling? What are the best bits of MicroPython? \r\n\r\nJoin me in this talk for a whirlwind tour of some of the most exciting features of this modern embedded programming language.", "description": "There\u2019s no question; C and C++ are the 800 pound gorillas of the embedded domain. But MicroPython provides a high-level language alternative in this space and, in addition to modern syntax, it also provides unique features that can _vastly_ improve the embedded development experience. Which - let\u2019s be honest! - has _barely improved_ in decades.\r\n\r\nSo, let\u2019s take a look at some of those features! \r\n\r\nFor starters, there\u2019s the live REPL. We\u2019ll look at how to use the REPL and why having an immediate way to interact with your device is an indispensable tool. \r\n\r\nPython\u2019s `asyncio` is well-supported in MicroPython and, it turns out, is a very good fit for embedded devices. We\u2019ll look at what makes it such a good fit - and how we can apply libraries like `aioble` and `aiorepl` to accelerate development.\r\n\r\nTo manage a connection to your MicroPython device, the core team provides the official tool, `mpremote`. We\u2019ll cover some of the useful features it provides and explain how to integrate them into a workflow that allows rapid development.\r\n\r\nAlthough it\u2019s a high-level language, MicroPython balances providing access to low-level features in an accessible way. We\u2019ll briefly touch on using such features as the PIO, RMT, USBDevice and register access. From there we\u2019ll shift to discuss some of the performance optimisation features such as inline assembly, frozen code and the viper and native emitters.\r\n\r\nTo wrap up, we\u2019ll look at how _freakin\u2019 useful_ it is to be able to run MicroPython on x86 (and even in a browser!).\r\n\r\nThere\u2019s a lot to cover but these features can really help level-up embedded development!", "recording_license": "", "do_not_record": false, "persons": [{"guid": "e4e971f7-a1d4-554b-9f3f-5225ec00126a", "id": 1668, "code": "N9ZZWG", "public_name": "Matt Trentini", "avatar": "https://pretalx.com/media/avatars/ea42d30f7cda55601ae9931f5579abe0_nQNiRQD.jpg", "biography": "Matt is a software engineer with more than twenty years professional experience. Yes, sigh, he's getting old.\r\n\r\nHaving worked on a wide variety of projects - from tiny embedded applications to large web-based systems - means that he has tinkered with most aspects of the software stack. He's enjoyed it all! Apart from technical pursuits he also loves rock climbing and, generally, being in the outdoors.\r\n\r\nMatt hosts the [Melbourne MicroPython Meetup](https://melbournemicropythonmeetup.github.io/) - and hopes to see you there!", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/8UXYBS/", "id": 53937, "guid": "38efd7a6-3625-52b7-a107-008b40da4aa8", "date": "2024-11-23T14:50:00+11:00", "start": "14:50", "logo": null, "duration": "00:30", "room": "Eureka 3", "slug": "pycon-au-2024-53937-wait-is-wi-fi-just-blinking-lights-", "title": "Wait, is Wi-Fi just blinking lights?", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Wi-Fi, the mysterious computer blabber. Have you ever wondered how are computers yapping away from under our noses? What secrets must they hold? In this talk we will cover the magic of Wi-Fi, how it works in detail and we will even get our own wireless communication system going using Python and micro-controllers.", "description": "Wi-Fi systems are complicated beasts with several layers, each solving a little piece of the overall wireless communication puzzle.\r\n\r\nAt the most basic level, there are radio frequency transmitters and receivers. Transmitters are little lights that can be turned on and off at several different colors and intensities, but with frequencies so low our eyes can't see. Conversely, receivers are just little 360\u00b0 cameras, that like our eyes can only see a small spectrum of colors, but again in colors we can't see.\r\n\r\nOn top of that, if two computers want to communicate they must plot and agree upon a common scheme for how to blink their own lights, and how to change their colors and intensities so that they know what each other mean when they see specific light patterns. This is not unlike Morse code, but using more ways of conveying information other than just short and long blinks.\r\n\r\nEven though that forms the basis of being able to communicate, there are still several other layers on top, since the scheming computers must also agree on things such as to when to turn off their transmitters so their cameras are not blinded by their own lights as they are trying to listen to their peers, how to identify to whom the messages are going if there are multiple peers, how to secretly encode messages such that only peers in the same network can see it, and how to deliver messages from and to the Internet.\r\n\r\nUsing Python and RP2040 microcontrollers, we can build little lights and cameras and implement a fully working version of a wireless communication system, with the extra benefit we can actually watch the lights and see what it looks like when computers are talking.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "97b51cb7-c426-5b93-899c-70537026d7f9", "id": 30282, "code": "YCFJET", "public_name": "Felipe Tavares", "avatar": "https://pretalx.com/media/avatars/profile-pic11_NglMWbQ.png", "biography": "I am a curious individual who happens to be a programmer. My interest in computers actually started with microcontrollers and the digital design of processors, but once I figured dealing with hardware was expensive I decided to focus on software, only to find myself drawn back to it. I have done a lot of things throughout the years: wireless communication protocols, raytracing, games and game engines, art, cryptography, classical simulation of quantum processes and a lot more. At present I design and run experiments for validating Wi-Fi chips under real world conditions.", "answers": []}], "links": [], "attachments": [], "answers": []}]}}, {"index": 3, "date": "2024-11-24", "day_start": "2024-11-24T04:00:00+11:00", "day_end": "2024-11-25T03:59:00+11:00", "rooms": {"Goldfields Theatre": [{"url": "https://pretalx.com/pycon-au-2024/talk/LYLY7H/", "id": 53638, "guid": "a0b3f29c-d088-5f6e-bc5a-d07a454bcf05", "date": "2024-11-24T10:35:00+11:00", "start": "10:35", "logo": null, "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-53638-quantifying-nebraska", "title": "Quantifying Nebraska", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "[In 2020, xkcd published _Dependency_](https://xkcd.com/2347/), which posited that \"all modern digital infrastructure\" is ultimately transitively dependent on \"a project some random person in Nebraska has been thanklessly maintaining since 2003\".\r\n\r\nHow can we find these projects and ensure that their maintainers get the thanks and \u2014 more importantly \u2014 the resources they need?", "description": "(Almost) every Python project depends on packages, which depend on packages, which depend on packages, How do we find the ones that might need our help?\r\n\r\nSpoiler alert: there's no perfect quantification. (At least to my knowledge.)\r\n\r\nBut given that, how can we use tooling designed for supply chain security \u2014 SBOMs, scorecards, code forge metrics \u2014 and use those to identify the packages that we depend upon that may be at risk, that are load bearing for our projects, and that we might be able to help in ways that are more targeted than just throwing money at the problem?\r\n\r\n(Although, also, throwing money at problems can be useful. Just saying.)\r\n\r\nThere's lots of talk of making supply chains more secure. Let's make sure we also make them more sustainable as well.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "b63b10cc-57cb-5f58-b8e4-b7d29395bec0", "id": 1229, "code": "8LCDDU", "public_name": "Adam Harvey", "avatar": "https://pretalx.com/media/avatars/36d8c4d60eaed7139aa0ab88378590c0_QjHrX33.jpg", "biography": "Adam works as a security-focused software developer at the [Rust Foundation](https://foundation.rust-lang.org/) working on ecosystem security, especially around improving supply chain security for crates.io and Rust releases.\r\n\r\nProfessionally, his history includes stints as a developer at New Relic, deviantART, and Sourcegraph, while his open source work includes being a project member of Rust and PHP.\r\n\r\nIn his spare time, he plays cricket, kayaks, speaks Spanish _extremely_ badly, throws tennis balls for his golden retriever, and tries to convince people that his Australian accent is actually flawless Canadian.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/P7UKEN/", "id": 53966, "guid": "e099eebb-2de3-59d4-8e94-a6ae89562b35", "date": "2024-11-24T11:15:00+11:00", "start": "11:15", "logo": null, "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-53966-dependency-management-the-cause-of-and-solution-to-all-supply-chain-problems", "title": "Dependency management: the cause of\u2014and solution to\u2014all supply chain problems", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "How many dependencies does your software project have? How much confidence do you have in them? We sometimes say in open source there is safety in \u2018eyes on the code\u2019, but with supply chain attacks on the rise, who is really watching?\r\n\r\nMost software is built with hundreds if not thousands of direct and transitive dependencies, and those dependencies change every day. Our analysis shows that up to 20% of PyPI packages change their dependency graphs multiple times per week. Ensuring that each one of these dependencies is trustworthy is a daunting task.\r\n\r\nIn this talk, we will share some stats and stories from building deps.dev. We will look at what it means for a project to be healthy, dig into the complexities of dependency resolution algorithms, and recommend tools that can make practical dependency management possible if not easy.", "description": "", "recording_license": "", "do_not_record": false, "persons": [{"guid": "1d7c9362-dacc-5c8a-9b47-640e4a69c552", "id": 1773, "code": "X99XWA", "public_name": "Nicky Ringland", "avatar": "https://pretalx.com/media/avatars/cd3e4475f0521c4df69598eae54502ae_oLtz3hX.jpg", "biography": "Dr Nicky Ringland is a Product Manager working in open source security at Google. She describes herself as a recovering Computational Linguist - having earned a PhD in Computer Science from the University of Sydney, (her thesis involved thinking hard about the names of things, then training a computer to do the thinking for her). She previously co-founded Grok Learning - a startup with a mission to teach students to solve problems with code. Named one of Australia's inaugural \u201cSuperstars of STEM\u201d and an Australian Financial Review 'Women of Influence', Nicky is passionate about teaching the next generation the skills they need to become the creators of tomorrow, while building a healthy, diverse community for them to thrive in.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/LALLKX/", "id": 53875, "guid": "1029021e-8e95-5f41-b44a-2b534091a04e", "date": "2024-11-24T11:55:00+11:00", "start": "11:55", "logo": null, "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-53875-the-perfect-setup-not-setup-py-building-packages-the-right-way", "title": "The perfect setup? Not setup.py! Building packages the right way", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Everyone loves package management! Python's packaging systems have continued to evolve over the years. Specifications such as environment markers, custom backends, and static build configurations have been introduced. Additionally new package managers like Poetry and Hatch have emerged.\r\n\r\nYet despite the updates, many projects are still living in the 2010s - using a setup.py file to specify the build configuration for their package. setup.py is notoriously difficult to learn and a common vector for launching attacks during install.\r\n\r\nThis talk will discuss why it's time to move away from using setup.py and how to do it.\r\n\r\nWe will see how setup.py is used and abused - from downloading huge datasets (*cough* AI *cough*), modifying the system, and most critically how malicious payloads can be included to execute when setup.py is evaluated. Arbitrary code in setup.py makes security analysis harder and creates more work for PyPI administrators.\r\n\r\nThe talk will detail the new (as of 7 years ago) methods of describing build configurations in pyproject.toml and setup.cfg, giving examples of how to use these methods. The examples will include how to achieve what once required dynamic code to include data like readme contents, version numbers and requirements. The limits of pyproject.toml and setup.cfg will also be covered.\r\n\r\nFinally, the talk will outline how moving away from setup.py improves the Python packaging universe, how it makes life easier for ensuring Python security, and what can be done to drive adoption of pyproject.toml.", "description": "", "recording_license": "", "do_not_record": false, "persons": [{"guid": "2600ef70-53d5-5e40-b453-d48debf7e220", "id": 47307, "code": "CGMRAQ", "public_name": "Caleb Brown", "avatar": null, "biography": "Caleb is a Senior Software Engineer working for Google's Open Source Security Team. At Google he contributes to deps.dev and maintains a [repository of malicious package reports](https://github.com/ossf/malicious-packages) for open source packages. Caleb has been using Python for over 15 years, starting with build Django sites at publishing company.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/ZGCQSY/", "id": 52055, "guid": "88d03df2-444f-5acc-928b-af43fea96d4b", "date": "2024-11-24T13:30:00+11:00", "start": "13:30", "logo": "https://pretalx.com/media/pycon-au-2024/submissions/ZGCQSY/Melbourne_Python_Talk_Cover_Image_RFALNTB.png", "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-52055-setting-up-your-python-community-for-success-lessons-from-the-melbourne-python-user-group", "title": "Setting Up Your Python Community for Success: Lessons from the Melbourne Python User Group", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Discover best practices in managing a meetup which fosters a vibrant open-source ecosystem and maintains engaged membership and volunteers from experiences within the Melbourne Python User Group. Learn best practices for organizing successful meetups, hackathons, and collaborative projects that drive community engagement and innovation.", "description": "The Melbourne Python User Group has always aimed to be a cornerstone of the local Python community, providing a platform for Python enthusiasts to learn, share, and collaborate. In this session, we will delve into the strategies and practices that have contributed to our group's success, along with successes from other meetups that have been managed in the past which offer valuable insights for anyone looking to build or enhance their own Python community.\r\n\r\nWe will begin by exploring the foundational principles of community building, emphasizing the importance of inclusivity, diversity, and continuous learning. Attendees will learn how to create an environment that welcomes newcomers and encourages participation from all skill levels, ensuring a rich and supportive community culture.\r\n\r\nNext, we will discuss the logistics of organizing meetups and events. This includes selecting engaging topics, securing knowledgeable speakers, and leveraging various formats such as talks, workshops, and coding sprints. We will share our experiences in coordinating these events, highlighting both successes and challenges, and providing practical tips for smooth execution.\r\n\r\nOne of the key components of a tech community's vibrancy is the focus on hackathons and collaborative projects. We will detail the process of planning and running hackathons that inspire creativity and innovation, from ideation to execution. Additionally, we will showcase some of the impactful projects that have emerged from these events, illustrating the potential of collaborative efforts to drive the open-source ecosystem forward.\r\n\r\nThe session will also cover the importance of fostering connections within the community and beyond. We will share strategies for building partnerships with local tech companies, educational institutions, and other user groups, creating a network of support and resources that benefits all members.\r\n\r\nBy the end of this session, attendees will have a comprehensive understanding of the best practices for building and sustaining a thriving Python community. They will leave with actionable insights and inspiration to apply these principles within their own contexts, whether they are starting a new user group or looking to revitalize an existing one.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "71eb5a86-4347-5f07-84cd-f4b598a568b8", "id": 23187, "code": "XPM9RU", "public_name": "Renaldi Gondosubroto", "avatar": "https://pretalx.com/media/avatars/Renaldi_Headshot_2_2ykNW11.png", "biography": "Renaldi Gondosubroto is an accomplished Software Engineer, instructor and a developer advocate in the tech community. With over a decade of experience in developing Artificial Intelligence solutions, he has made significant contributions to numerous companies and communities. Outside of the industry, he is active in the academia community, having his research focused on generative AI and machine learning. Having spoken at over 40 events and conferences, along with having led a chunk of workshops, he has been an international speaker for the past six years, sharing his experiences and projects. He also is the organizer of the Melbourne Python User Group and currently is an AWS Subject Matter Expert (SME) for its Professional and Specialty Certifications and holds all 13 AWS certifications, along with 20 Microsoft Azure Certifications. He aims to build open-source solutions which can both help people achieve more value in what they do and promote best practices for fellow developers.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/MVAF7U/", "id": 53893, "guid": "ffd2fa5c-5608-50d4-8f07-3c4601ce2804", "date": "2024-11-24T14:10:00+11:00", "start": "14:10", "logo": null, "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-53893-how-we-used-python-to-try-and-save-lives", "title": "How we used Python to try and save lives", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Google Crisis Response saved lives and tried to make the world better. And all of it was in Python.", "description": "At one point before Google switched to suck, they let a bunch of us try to save the world. And mapvisage, person finder, crisismap? All in Python (ok there was some JavaScript and even Flash involved). Having your Python on Appengine site embedded on the front page of pretty much every news site on earth? Quite a lot to cope with.\r\n\r\nAfter another time I had to stop building a coffee table to run upstairs to task satellites. As you do on a weekend, get home from IKEA, start assembling and go oops need ask people to point their flying space robot cameras at this bit of the world. Normal weekend.\r\n\r\nAnd I will eventually finish my book.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "8424240c-f301-59a8-b57f-668a29aaf4cd", "id": 47318, "code": "AK9RMY", "public_name": "Anthony Baxter", "avatar": null, "biography": "Anthony has been using Python since the dark ages of Python 0.9.2. Guido tricked him into being the release manager for Python for a number of years, during that time he convinced vendors to trust us. PEP 6 and so forth.\r\n\r\nHe's gone from working at Google to working for a union. Always gotta try and save the world. Or try, anyway.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/UKK9K9/", "id": 53344, "guid": "59ed2fff-21b4-597e-b8db-d9f100ddcd3e", "date": "2024-11-24T14:50:00+11:00", "start": "14:50", "logo": null, "duration": "00:30", "room": "Goldfields Theatre", "slug": "pycon-au-2024-53344-lowering-the-gangplank-how-writing-songs-relates-to-templating", "title": "Lowering the Gangplank: How Writing Songs Relates to Templating", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Templating is awesome! It makes automation easier and takes away a lot of the tedious work required to maintain and build new things. Now, what if I told you that the way we utilise templates is somewhat similar to how songs are written? In this talk I will lower the proverbial gangplank from our templating ship as we cross over into the land of song writing and discover how these two concepts are linked.", "description": "This talk will including me singing live on stage and audience participation will be encouraged!", "recording_license": "", "do_not_record": false, "persons": [{"guid": "880f6bba-5de3-512a-a9e8-62ce0ddfe7cf", "id": 27157, "code": "FTUWNC", "public_name": "Chelsea Finnie", "avatar": "https://pretalx.com/media/avatars/PenguSquare2_vrBAf4Y.png", "biography": "Chelsea is a Network DevOps Engineer working at REANNZ. She is also a committee member of Python New Zealand (NZPUG) and is heavily involved with this year's Kiwi PyCon. She's passionate about automation, just making things easy for yourself, and thinks Python is just great in a lot of ways for so many different things.", "answers": []}], "links": [], "attachments": [], "answers": []}], "Eureka 2": [{"url": "https://pretalx.com/pycon-au-2024/talk/8HBU3Z/", "id": 53107, "guid": "5f6f0612-77f7-518b-ae91-72e5785cc819", "date": "2024-11-24T10:35:00+11:00", "start": "10:35", "logo": null, "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-53107-using-multiple-databases-in-django-applications", "title": "Using Multiple Databases in Django Applications", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Over six years ago, three engineers from Sydney started working on an insurtech platform with global ambitions. They chose Django, even though two of them had no prior experience with the framework. Nevertheless, the project became a success, affirming that choosing Django was a great technical decision.\r\n\r\nThis is a real-life story about the challenges the team faced while scaling the project and changing the database architecture, all while maintaining uninterrupted services for millions of customers. We will cover some of the key technical decisions the team made, how Django supported us in migrating from a single database to a multi-database architecture, and examine the architectural benefits of using multiple databases in data-intensive applications.", "description": "", "recording_license": "", "do_not_record": false, "persons": [{"guid": "5a947e2c-7347-5fa0-9e1d-eb390c8f9c70", "id": 46782, "code": "VQZYV9", "public_name": "Artem Kolesnikov", "avatar": "https://pretalx.com/media/avatars/photo_IgPBVll.jpg", "biography": "Hello, I\u2019m Artem, a Director of Software Engineering at Cover Genius, a global insurtech company. With around 15 years of experience as a Software Engineer, I currently specialise in Python API development using Django. I\u2019m passionate about working with both people and systems, and I strive to close gaps between the two in a sustainable and responsible manner. Outside of work, I practice martial arts, currently focusing on Brazilian Jiu-Jitsu (BJJ). I'm also organising SyDjango, a Django meetup group in Sydney.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/9ZRRJY/", "id": 53924, "guid": "397085e2-fc98-58b3-869e-63babeac4803", "date": "2024-11-24T11:15:00+11:00", "start": "11:15", "logo": null, "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-53924-how-to-confirm-that-the-index-you-added-actually-improves-query-performance", "title": "How to confirm that the index you added actually improves query performance", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Database indexes allow us to speed up queries by providing a method to quickly look up data. However, do we always check that they actually improve performance? In this talk, I explain how and why an automatically added database index did not get used by the queries we expected. Together we will go through SQL produced from Django ORM, index structures and generating database query plans to unravel what was actually going on behind the scenes in our queries.", "description": "Within my current role on the performance team, it is my responsibility to investigate sources of and solutions to poor database performance within our company's application. Understanding the how and why of database indexes has been an important part of this, however, my knowledge of database indexes is a relatively recently gained experience. In this talk I aim to share what I have learnt along the way as applied to investigating why an index added in Django was not improving the performance of our database query.\r\n\r\n<b>Database Indexes</b>\r\nHere, I explain what database indexes are and why we use them. I go through the main ways to add database indexes using Django ORM and migrations. Then, I demonstrate query plans and how to generate the query plans for the SQL queries that are created.\r\n\r\n<b>Introducing the example</b>\r\nThe main way I learnt about indexes was via debugging a particular issue.  I introduce an example where we use django orm to search a partial match on a string field. This partial match did not use the pre-existing index that was already in the table. This example is used to contextualise the rest of the talk.\r\n\r\n<b>Django ORM to SQL</b>\r\nDjango ORM can be a convenience for converting models within code into queries, however, sometimes the queries produced can be less intuitive than expected. I demonstrate the SQL queries produced by the example above and demonstrate why this query using 'LIKE' did not get any speed-up by using the indexes already available on this table.\r\n\r\n<b>Trigram Indexes</b>\r\nI introduce trigram indexes and demonstrate the improvements in query cost for the example above we can gain by adding a trigram index instead.\r\n\r\n<b>Repeat the process for changing to case-insensitive search</b>\r\nAs an extension to this, a new feature request required that the search be case insensitive. I reveal the proposed change to the Django ORM query, the generated SQL and demonstrate how a new index is required if this change is made.\r\n\r\nFinally, I will summarise what I have learnt within my adventures in Database index analysis and share some useful resources for further learning in the areas of postgres database performance.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "7c25a168-323a-5ce4-ab67-09bf868e0c6c", "id": 46654, "code": "WRLNJE", "public_name": "Suzannah Cooper", "avatar": null, "biography": null, "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/UKJB7J/", "id": 53799, "guid": "53bc010b-fe9b-5769-bf28-6ec080d5e35b", "date": "2024-11-24T11:55:00+11:00", "start": "11:55", "logo": null, "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-53799-follow-the-postgres-brick-road-a-journey-of-testing-against-a-real-database-server", "title": "Follow the Postgres brick road: a journey of testing against a real database server", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Tests are good. Code that uses a database is good. Testing code that uses a database is great\u2026 But it's not so easy to do well. Let's follow our journey through various pitfalls to make testing against a local PostgreSQL instance informative, reliable and fast, so that we have fewer horrible surprises once code gets to production.", "description": "We follow the usual approach for building an application: store data in a database. Our method is SQLAlchemy models in our Python code, and migrations to evolve the schema. \r\n\r\nWe also have the usual desire for these applications: they should work, and *continue* to work as we make changes. One key method is automated tests.\r\n\r\nManaging both of these at once is surprisingly subtle, but it's also good to solve: no-one likes having behaviour in production be a surprise because a test made incorrect assumptions about how the database behaves.\r\n\r\nI\u2019ll walk us along our database testing trail, stopping in at attractions like (not) using SQLite, ensuring migrations and models match, efficiently instantiating databases with the right schemas, isolated and parallel execution, and even optimising how each individual tests runs.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "e5efa85e-3ee0-5ead-a338-56344865b890", "id": 30433, "code": "PGYLJB", "public_name": "Huon Wilson", "avatar": "https://pretalx.com/media/avatars/profile.jpg_IRjIpGe.png", "biography": "Huon is a software engineer aiming to make others more effective. He's now writing and deploying Python extensively at ExoFlare, and has previously worked on dev tools and programming languages at Mozilla and Apple and machine learning research at CSIRO.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/C37SMX/", "id": 51692, "guid": "34ce3d05-e59c-5a96-bd5b-0435c5e743c6", "date": "2024-11-24T13:30:00+11:00", "start": "13:30", "logo": null, "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-51692-django-rest-and-openapi-a-gentle-introduction", "title": "Django, REST and OpenAPI - a gentle introduction", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Django is an all-parts-included framework that is one of the most popular ways of building a website in Python.  But for many websites that's not enough - we also need a REST-based API with an OpenAPI specification so that other programs can read and work with our data.  This talk will cover the Python packages that can provide these facilities and how to integrate them into your existing website.", "description": "This talk will primarily cover two packages:\r\n- django-rest-framework, or 'DRF' for short, for providing a REST API\r\n- drf-spectacular, for providing an OpenAPI schema for that API\r\nIt will include real world examples for how these things work and attendees can also try out the REST interface and OpenAPI schema the talk is based on.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "2af239c7-c84a-51c4-8541-34ee2b26b816", "id": 5481, "code": "RB3PZZ", "public_name": "Paul Wayper", "avatar": "https://pretalx.com/media/avatars/c6d06e8c0df6789364ac68f7aeaed800_lQgt0db.jpg", "biography": "Paul is a six-foot tall ape descendant and nobody is currently trying to drive a bypass through his home.  He works for an open source company, and in his spare time he maintains web sites, rides an electric motorbike, teaches Irish Set Dancing, plays the piano, reads science fiction and fantasy, 3D prints, and collects esoteric hobbies.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/S7E8T7/", "id": 53985, "guid": "bef5ad2f-b979-5863-8dab-c0923a8469b8", "date": "2024-11-24T14:10:00+11:00", "start": "14:10", "logo": null, "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-53985-three-django-apps-in-a-trenchcoat-writing-an-event-management-website-with-not-a-lot-of-time", "title": "Three Django Apps in a Trenchcoat: Writing an event management website with not a lot of time", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Come and hear how I wrote 3 Django apps in a trenchcoat to run a ~300+ person scout camp, from making event registration a breeze, to conducting everyone's movements throughout the entire event.", "description": "In the last weekend of April this year, I helped to run Star Trek: Survival (https://startreksurvival.tech), a STEM-focussed, Star Trek-themed scout camp for all ages, 5 to 26 years. This talk will be about the software I wrote, including a registration system, the Star Trek Survival main website, and a system called RadioActiv8, which is used to keep track of where everyone is across the campsite, and send them to activities when there is capacity to do so. All of this was combined into a single project for maximum integration and ease of use.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "0c3e13cc-42e9-5c16-acad-4f09995e5feb", "id": 47352, "code": "CYVHAC", "public_name": "Matt Cengia", "avatar": "https://pretalx.com/media/avatars/signal-2022-07-03-19-36-05-9942_BaFQYmw_AS6w9Tc.jpg", "biography": "Matt (they/them/their) is a queer, autistic nonbinary human with ADHD, from the lands of Wurundjeri people of the Kulin nation (so-called Melbourne, Australia). They have a long background in Linux systems admin and software development, as well as strong interests in communication, empathy, consent, openness and transparency, privacy and security, diversity and inclusion. Matt identifies as a generalist, polymath, or multi-potentialite, and their breadth of interests often give them a unique perspective on how to relate to, and mediate between, people of different specialities.", "answers": []}, {"guid": "7a32bd76-8b68-5cf5-961e-a5083e05ed69", "id": 47357, "code": "QD8GMS", "public_name": "Luke Byrnes", "avatar": "https://pretalx.com/media/avatars/5e753a48150c4b90dd6addba390e5029_A1kEdh3.jpg", "biography": "Techknowledgy sponge. More to follow.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/B8RJPR/", "id": 52080, "guid": "d34b8cb3-c5ba-5adb-9881-fd32ca17eea5", "date": "2024-11-24T14:50:00+11:00", "start": "14:50", "logo": null, "duration": "00:30", "room": "Eureka 2", "slug": "pycon-au-2024-52080-space-django-migrating-and-redesigning-a-database-while-hunting-for-satellites-", "title": "Space Django: Migrating and Redesigning a Database while Hunting for Satellites.", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Being a fast-paced startup and developing a completely new product in the Space Industry is very challenging, and moving fast wasn\u2019t just a requirement but essential. It's the kind of environment that is hard to think too much ahead, and for that reason, our database was created to address the problems we had at hand. \r\nAfter a while, new products and features were required, and our database couldn't handle all of them. That\u2019s when we decided to move our data to a newly designed database instance with proper relationships, able to handle more features, higher workloads and scalable. During the planning phase, several approaches were discussed, such as creating a script to copy the data and some off-the-shelf software that we thought could handle that for us. However, the complexity of implementing those approaches wasn\u2019t feasible with our deadlines for releasing the new product. So, we decided to copy the data using Django ORM (our product was already using Django), the idea was to avoid the complexity of creating complex SQL Queries to copy data to new tables while keeping the data consistency and integrity.\r\nIn this presentation, we aim to demonstrate how our database was limiting the company\u2019s scalability and how we fixed those problems by migrating to a new database schema whilst maintaining two database instances, one for internal operations and the other for customer-facing functions. Moreover, we show how we did that using object-oriented programming in combination with Django\u2019s ORM to migrate our database without the need to handle complex SQL commands to copy data, keep relationships, and create new ones.", "description": "The presentation has three main goals; (1) show how the database that we had before was limiting the development of new products and, in the medium-term, would be a potential issue to scale; (2) present some of the options we considered and the tradeoffs; (3) the strategy we chose and how we implemented it (main challenges and how the combination of OOP and Django\u2019s ORM actually speed up not only the process but made it easier).", "recording_license": "", "do_not_record": false, "persons": [{"guid": "c35f6930-02df-5f94-9878-23da174660a2", "id": 45851, "code": "EJ9MHD", "public_name": "Artur Baruchi", "avatar": "https://pretalx.com/media/avatars/IMG_8138_rqZjrzD.png", "biography": "Artur Baruchi has a bachelor's degree in Computer Science and received an M.Sc. (2010) and a PhD degree (2015) in computer engineering from the University of Sao Paulo, Brazil.\r\nFrom 2005 to 2015, he worked as a Unix SysAdmin for several companies such as HP, IBM, and EDS. From 2015 to 2017\r\nhe worked as a Postdoctoral researcher at Sao Paulo State University on an Open Source project about Software Defined Networks (SDN) and Cloud Computing. Also, during this period, he was a professor at Anhembi Morumbi University. \r\nAfter that, worked at LexisNexis as consulting Software Engineer and HPCC ambassador in several universities performing workshops and as advisor to undergraduate and graduate students.\r\nHe moved to Australia in 2021 to work as an SRE at Goldman Sachs and is currently working as a Software Engineer at HEO (an Australian startup in the Space Industry) and as a technical reviewer of books for Manning Publisher.", "answers": []}], "links": [], "attachments": [], "answers": []}], "Eureka 3": [{"url": "https://pretalx.com/pycon-au-2024/talk/QTWAGZ/", "id": 53965, "guid": "8b2e6fbd-71c5-592b-a03a-33943c99ef39", "date": "2024-11-24T10:35:00+11:00", "start": "10:35", "logo": null, "duration": "00:30", "room": "Eureka 3", "slug": "pycon-au-2024-53965-better-dataframes", "title": "Better dataframes", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Dataframes are an abstraction that proven extremely useful for data analysis in dynamic languages like S, R, Python, and Julia. The Pandas package has been dominant in Python for around 15 years but its design is now showing its age. There is now a vibrant and messy ecosystem of potential disruptors to the status quo for data analysis tasks in Python.\r\n\r\nThis talk will help you make sense of the mess. It will give you a comprehensive review of the strengths and weaknesses of the challengers, including Polars, Ibis, Vaex, Modin, Dask, and the PySpark Pandas API (formerly known as Koalas). It will also review efforts to unify the PyData landscape such as Apache Arrow, the dataframe interchange protocol, Narwhals, and the Ibis project from the original author of Pandas, Wes McKinney.", "description": "The talk will provide context and guidance for deciding which dataframe library to choose for your next project. It will also explain the best ways to offer cross-dataframe support in your library code.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "72056e9f-b43f-5aa3-9f51-36f80875e1d7", "id": 47338, "code": "3WXCVF", "public_name": "Ed Schofield", "avatar": null, "biography": null, "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/U3YKPB/", "id": 53971, "guid": "d7649f58-04c2-5a1e-aa70-709d9dc18d71", "date": "2024-11-24T11:15:00+11:00", "start": "11:15", "logo": null, "duration": "00:30", "room": "Eureka 3", "slug": "pycon-au-2024-53971-rethinking-data-catalogs-the-promise-and-pitfalls", "title": "Rethinking Data Catalogs: The Promise and Pitfalls", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "The promise of data catalogs, a single source of truth for your organisation's data, often clashes with the reality of under-utilised features, redundancy across various data catalog solutions across teams, adoption challenges and a lack of clear strategy.\r\n\r\n\r\nThis talk will pose some critical questions concerning current approaches of choosing and implementing data catalogs:\r\n\r\n\r\n- Do you actually need a Data catalog?\r\n- Are data catalogs becoming just glorified registries without much practical use?\r\n- Why do organisations find themselves juggling multiple catalogs?\r\n- Is there a synergy between System Catalog & Data Catalog?\r\n- How do you identify the right fit and what are the considerations?\r\n- How to measure success for a data catalog?\r\n\r\nWe'll dissect the reasons behind these challenges and share our experience of implementing data catalogs across different organisations.", "description": "", "recording_license": "", "do_not_record": false, "persons": [{"guid": "3f118828-532b-5e6a-946d-ea544844aa46", "id": 30864, "code": "3DCSNN", "public_name": "Harmeet Sokhi", "avatar": "https://pretalx.com/media/avatars/1aa9a192090001f30be351ac4c8021f5_vMdEteR.jpg", "biography": "I'm Harmeet, a lead data engineer at Thoughtworks who's been lucky enough to work with some incredibly smart people in building data and ML platforms & products . Over the years, I've had the opportunity to   lead teams in building  data and ML platforms, products, and work on organisational transformations  including evolving  data function operating models to scale. I\u2019ve dabbled in various industries, including energy, accounting, airlines, retail and many more , helping teams mature their data and ML capabilities.   \r\nBeyond my professional life, I'm a co-host of the data engineering Melbourne meetup and also  had the opportunity to tech review an O'Reilly book 'Effective Machine Learning Teams'.", "answers": []}, {"guid": "caf715a1-9bf0-57fc-8caa-267093184d7b", "id": 47342, "code": "98HVRZ", "public_name": "Vishal Srivastava", "avatar": "https://pretalx.com/media/avatars/self_low_res_3_18IqiHv.jpg", "biography": "Vishal is a Senior Data Consultant with DevOps skills who has worked across a range of industries. He has experience in establishing Cloud Infrastructure Foundations, Event Driven Data Lake, Data Visualisation, Master Data Management, Data Quality, Data Governance frameworks and Data Mesh. He is passionate about real time event driven distributed systems. Vishal has used these experiences to enable use cases which help businesses realise real value from data.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/DQPW7L/", "id": 53014, "guid": "690298d3-d8bd-5e9c-a667-bb3a494b9ece", "date": "2024-11-24T11:55:00+11:00", "start": "11:55", "logo": null, "duration": "00:30", "room": "Eureka 3", "slug": "pycon-au-2024-53014-adding-file-system-context-to-pathlib", "title": "Adding File System context to pathlib", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Adding file system specific information (e.g. how to match case, whether to follow symlinks) to pathlib Path objects, instead of adding such arguments to methods taking Path objects.", "description": "Pathlib has become the de facto standard to pass file system paths\r\naround, which is kinda weird as the only real thing it's going go for\r\nit is a tiny bit of syntactic sugar.\r\n\r\nPaths are a bit of an odd duck, as their literal form is very close to\r\ntheir object form.\r\n\r\nBut there are extra bits of context around a path that matter, such as\r\nfollowing symlinks, and junctions, how to handle case when matching\r\nfile names.\r\n\r\nI became interested in the idea of embedding some of this knowledge\r\ninside the path object, and seeing if that led to a clean up of the\r\nAPI, can we avoid having all these file system, implementation\r\nspecific flags in our API, and instead encapsulate them within our\r\npath objects?\r\n\r\nA lot of work has been done in the last few releases to make pathlib\r\nextensible, so that paves the way for trying API experiments like\r\nthis.\r\n\r\nOften when you get an idea, it rattles around in the brain like a\r\nbuzzing bee. With Python you can throw it up on the \"ideas\" forum and\r\nget it shot down quickly.\r\n\r\nOr Not..", "recording_license": "", "do_not_record": false, "persons": [{"guid": "e9c34e7d-9f99-5ac5-81fa-725090852481", "id": 1631, "code": "ZY7KJB", "public_name": "Clinton Roy", "avatar": "https://pretalx.com/media/avatars/0898bb664197d0f27e15f5677a183de7_Yod0P7l.jpg", "biography": "Clinton is an Open Source software engineer, who has made a career around supporting researchers.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/WYZEUQ/", "id": 53929, "guid": "9c6f2dd0-28be-572a-a32d-7f12b3dd1374", "date": "2024-11-24T13:30:00+11:00", "start": "13:30", "logo": null, "duration": "00:30", "room": "Eureka 3", "slug": "pycon-au-2024-53929-with-xonsh-use-python-as-your-shell-no-more-switching-between-shell-and-python-syntax-", "title": "With Xonsh use Python as your shell: No more switching between shell and Python syntax!", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Many of us employ shells (like Bash, Zsh or PowerShell) in the terminal to \u201cget admin things done\u201d on our computer. For the actual programming then we switch to Python to \u201cget real things done\u201d.\r\n\r\nBut what if you could use Python in your programs *and* in the terminal? Welcome to Xonsh, a shell and a Python REPL in one. This unique feature helps very much to get all things in the terminal done quicker, safer and to have more fun on the way!", "description": "In this talk I cover what Xonsh is, how you can use it to simplify your day-to-day work and how I have employed Xonsh to solve some sysadmin problems in a safer way. This talk is aimed at both Python beginners and experts who spend time in the terminal.\r\n\r\n### 1. What is Xonsh\r\n\r\n[Xonsh](https://xon.sh) is A shell in Python -- and Python in a shell. All [open source](https://github.com/xonsh/xonsh) and cross platform.\r\n\r\nHere I give an overview of the basics: Command execution similar to bash -- All strings are Python strings! -- Access to environment variables & aliases, but in consistent Python syntax -- Loops & control flow as well as know from Python.\r\n\r\n### 2. How you can use it\r\n\r\nUse case for *beginners*: You are starting out with Python? While writing your code you want to check a construct you are unsure of? Just jump into your shell -- if it is Xonsh! (A hands-on example here.)\r\n\r\nUse case for *experts*: You know Python inside out? Don't switch to another language with weird syntax when doing shell work -- use Xonsh! (A hands-on example here.)\r\n\r\n### 3. What I have done with it\r\n\r\nI have been working with Xonsh for over 5 years and over this time it has essentially replaced Bash for me. I will give hands-on examples of how it can help you to do everyday tasks.\r\n\r\nFor example, I use Xonsh to move, copy or delete files selectively and safely: (1) Assign a globbing result to a Python variable, (2) quickly check that the variable really contains the files you wanted to select, (3) then issue `rm @(variable)` and you are sure the correct files are deleted.\r\n\r\nI also employ Xonsh for reusable scripts: Need to handle command line parameters? In Xonsh I use simple Python syntax to access and iterate over them -- you can even use high-level Python CLI libraries like Click.\r\n\r\n### 4. And more!\r\n\r\nCustomise Xonsh to your heart's content (flexible prompt config and many plugins called \"Xontribs\") -- Search a powerful history -- Ask a very helpful community and a reasonable big user base.\r\n\r\nFinally. we have to talk about some disadvantages Xonsh has: You cannot blindly copy Bash command lines straight from the Internet - And: Xonsh is mature, but not as mature as Bash (rough edges around exception behaviour, etc).\r\n\r\nAll in all, Xonsh is a lot of fun and gives us Pythonistas less headaches than switching in the terminal always to Bash or Powershell!", "recording_license": "", "do_not_record": false, "persons": [{"guid": "43b790ae-24be-5b58-a40f-cdd5b56d714e", "id": 1632, "code": "BHGMDT", "public_name": "Leo Broska", "avatar": "https://pretalx.com/media/avatars/1c8d1308bafaa6eb869321d5dca427cd_6ulmg7M.jpg", "biography": "Software Engineer with the Australian Government. Long time Python lover and Programming Language affincinado . Now diving into Functional Programming.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/NFZKYP/", "id": 53660, "guid": "de672884-042a-55ee-98d7-797d53ccff90", "date": "2024-11-24T14:10:00+11:00", "start": "14:10", "logo": null, "duration": "00:30", "room": "Eureka 3", "slug": "pycon-au-2024-53660-time-and-time-again", "title": "Time and Time Again", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Time is one of the few forces that remain outside of human control. Attempting to understand it is hard enough, but attempting to make computers understand it is a frequent and common source of errors, especially across different cultures and calendars.\r\n\r\nThis talk will explore a number of different ways of understanding and expressing the flow of time, as well as common and uncommon edge cases to account for when building software.", "description": "This talk will occur at a specific location - that is usually easy enough to understand - and also at a specific time and date. What that time and date actually means is part of a large and complex system of rules and exceptions and changes, which is also only understood by specific cultures or valid in specific regions.\r\n\r\nThese systems can appear to be simple, but failing to get it right can result in anything from cultural insensitivity to a full-on systems failure.\r\n\r\nJoin us for a look at time itself, in which we will:\r\n- try to understand what this \"time\" thing actually is\r\n- explore different ways that time is represented and communicated\r\n- understand different calendar systems and how they interact\r\n- learn how to build more resilient and culturally sensitive computer systems", "recording_license": "", "do_not_record": false, "persons": [{"guid": "ff98adc8-e420-5c3e-be78-bd304b950d90", "id": 1552, "code": "P9CXX8", "public_name": "Yaakov", "avatar": "https://pretalx.com/media/avatars/MicrosoftTeams-image-smaller_j754fqe.jpg", "biography": "Yaakov is a Principal Software Engineer at WiseTech Global, occasional speaker, open-source contributor, reverse-engineer, hacker, problem solver, amateur radio operator, and Pok\u00e9mon collector.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"url": "https://pretalx.com/pycon-au-2024/talk/WCUHJ8/", "id": 53093, "guid": "8967737a-6478-5fe3-90df-ebaba79edffb", "date": "2024-11-24T14:50:00+11:00", "start": "14:50", "logo": null, "duration": "00:30", "room": "Eureka 3", "slug": "pycon-au-2024-53093-turtles-all-the-way-down-abstractions-and-when-we-should-use-them", "title": "Turtles all the way down: Abstractions and when we should use them", "subtitle": "", "track": "Main Conference", "type": "Talk", "language": "en", "abstract": "Abstractions are one of the greatest tools in all of programming. But sometimes we reach for them too often. How do we know when we should use an abstraction, and when we should just use the ones that already exist.", "description": "Abstractions are rife in programming. You might even say they are the way we build meaning into our systems. But often when faced with a problem, we reach for a new container to neatly package it up and make it a solution. Sometimes this works, but most of the time, the problem either immediately leaks out, or over time seeps out into nearby containers, contaminating them along the way.\r\n\r\nThis talk is about describing different types of abstraction (helpful and not-so-helpful), what they look like, and how to design a helpful one. In the end you will have a few new ways to think about when and how to create abstractions and possibly a mental guide to building (or not building) your own.", "recording_license": "", "do_not_record": false, "persons": [{"guid": "136a13f2-0456-59eb-889d-0b910f96d8de", "id": 46764, "code": "9JG7DV", "public_name": "Mark Lakewood", "avatar": "https://pretalx.com/media/avatars/Profile_photo_kLZb4p5.jpg", "biography": "Dad and Software Engineer. Based in Perth WA, Lived in San Francisco. Worked in Platforms for a company that sends lots of Text Messages, and now works on getting the world through the Energy Transition as quickly as possible!", "answers": []}], "links": [], "attachments": [], "answers": []}]}}]}}}